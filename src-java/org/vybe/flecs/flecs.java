// Generated by jextract

package org.vybe.flecs;

import java.lang.invoke.*;
import java.lang.foreign.*;
import java.nio.ByteOrder;
import java.util.*;
import java.util.function.*;
import java.util.stream.*;

import static java.lang.foreign.ValueLayout.*;
import static java.lang.foreign.MemoryLayout.PathElement.*;

public class flecs extends flecs_1 {

    flecs() {
        // Should not be called directly
    }
    private static final int EcsIdHasOnSet = (int)262144L;
    /**
     * {@snippet lang=c :
     * #define EcsIdHasOnSet 262144
     * }
     */
    public static int EcsIdHasOnSet() {
        return EcsIdHasOnSet;
    }
    private static final int EcsIdHasOnTableFill = (int)524288L;
    /**
     * {@snippet lang=c :
     * #define EcsIdHasOnTableFill 524288
     * }
     */
    public static int EcsIdHasOnTableFill() {
        return EcsIdHasOnTableFill;
    }
    private static final int EcsIdHasOnTableEmpty = (int)1048576L;
    /**
     * {@snippet lang=c :
     * #define EcsIdHasOnTableEmpty 1048576
     * }
     */
    public static int EcsIdHasOnTableEmpty() {
        return EcsIdHasOnTableEmpty;
    }
    private static final int EcsIdHasOnTableCreate = (int)2097152L;
    /**
     * {@snippet lang=c :
     * #define EcsIdHasOnTableCreate 2097152
     * }
     */
    public static int EcsIdHasOnTableCreate() {
        return EcsIdHasOnTableCreate;
    }
    private static final int EcsIdHasOnTableDelete = (int)4194304L;
    /**
     * {@snippet lang=c :
     * #define EcsIdHasOnTableDelete 4194304
     * }
     */
    public static int EcsIdHasOnTableDelete() {
        return EcsIdHasOnTableDelete;
    }
    private static final int EcsIdIsSparse = (int)8388608L;
    /**
     * {@snippet lang=c :
     * #define EcsIdIsSparse 8388608
     * }
     */
    public static int EcsIdIsSparse() {
        return EcsIdIsSparse;
    }
    private static final int EcsIdIsUnion = (int)16777216L;
    /**
     * {@snippet lang=c :
     * #define EcsIdIsUnion 16777216
     * }
     */
    public static int EcsIdIsUnion() {
        return EcsIdIsUnion;
    }
    private static final int EcsIdEventMask = (int)33488896L;
    /**
     * {@snippet lang=c :
     * #define EcsIdEventMask 33488896
     * }
     */
    public static int EcsIdEventMask() {
        return EcsIdEventMask;
    }
    private static final int EcsIdMarkedForDelete = (int)1073741824L;
    /**
     * {@snippet lang=c :
     * #define EcsIdMarkedForDelete 1073741824
     * }
     */
    public static int EcsIdMarkedForDelete() {
        return EcsIdMarkedForDelete;
    }
    private static final int EcsIterIsValid = (int)1L;
    /**
     * {@snippet lang=c :
     * #define EcsIterIsValid 1
     * }
     */
    public static int EcsIterIsValid() {
        return EcsIterIsValid;
    }
    private static final int EcsIterNoData = (int)2L;
    /**
     * {@snippet lang=c :
     * #define EcsIterNoData 2
     * }
     */
    public static int EcsIterNoData() {
        return EcsIterNoData;
    }
    private static final int EcsIterNoResults = (int)8L;
    /**
     * {@snippet lang=c :
     * #define EcsIterNoResults 8
     * }
     */
    public static int EcsIterNoResults() {
        return EcsIterNoResults;
    }
    private static final int EcsIterIgnoreThis = (int)16L;
    /**
     * {@snippet lang=c :
     * #define EcsIterIgnoreThis 16
     * }
     */
    public static int EcsIterIgnoreThis() {
        return EcsIterIgnoreThis;
    }
    private static final int EcsIterHasCondSet = (int)64L;
    /**
     * {@snippet lang=c :
     * #define EcsIterHasCondSet 64
     * }
     */
    public static int EcsIterHasCondSet() {
        return EcsIterHasCondSet;
    }
    private static final int EcsIterProfile = (int)128L;
    /**
     * {@snippet lang=c :
     * #define EcsIterProfile 128
     * }
     */
    public static int EcsIterProfile() {
        return EcsIterProfile;
    }
    private static final int EcsIterTrivialSearch = (int)256L;
    /**
     * {@snippet lang=c :
     * #define EcsIterTrivialSearch 256
     * }
     */
    public static int EcsIterTrivialSearch() {
        return EcsIterTrivialSearch;
    }
    private static final int EcsIterTrivialTest = (int)2048L;
    /**
     * {@snippet lang=c :
     * #define EcsIterTrivialTest 2048
     * }
     */
    public static int EcsIterTrivialTest() {
        return EcsIterTrivialTest;
    }
    private static final int EcsIterTrivialCached = (int)16384L;
    /**
     * {@snippet lang=c :
     * #define EcsIterTrivialCached 16384
     * }
     */
    public static int EcsIterTrivialCached() {
        return EcsIterTrivialCached;
    }
    private static final int EcsIterCacheSearch = (int)32768L;
    /**
     * {@snippet lang=c :
     * #define EcsIterCacheSearch 32768
     * }
     */
    public static int EcsIterCacheSearch() {
        return EcsIterCacheSearch;
    }
    private static final int EcsIterFixedInChangeComputed = (int)65536L;
    /**
     * {@snippet lang=c :
     * #define EcsIterFixedInChangeComputed 65536
     * }
     */
    public static int EcsIterFixedInChangeComputed() {
        return EcsIterFixedInChangeComputed;
    }
    private static final int EcsIterFixedInChanged = (int)131072L;
    /**
     * {@snippet lang=c :
     * #define EcsIterFixedInChanged 131072
     * }
     */
    public static int EcsIterFixedInChanged() {
        return EcsIterFixedInChanged;
    }
    private static final int EcsIterSkip = (int)262144L;
    /**
     * {@snippet lang=c :
     * #define EcsIterSkip 262144
     * }
     */
    public static int EcsIterSkip() {
        return EcsIterSkip;
    }
    private static final int EcsIterCppEach = (int)524288L;
    /**
     * {@snippet lang=c :
     * #define EcsIterCppEach 524288
     * }
     */
    public static int EcsIterCppEach() {
        return EcsIterCppEach;
    }
    private static final int EcsIterTableOnly = (int)1048576L;
    /**
     * {@snippet lang=c :
     * #define EcsIterTableOnly 1048576
     * }
     */
    public static int EcsIterTableOnly() {
        return EcsIterTableOnly;
    }
    private static final int EcsEventTableOnly = (int)1048576L;
    /**
     * {@snippet lang=c :
     * #define EcsEventTableOnly 1048576
     * }
     */
    public static int EcsEventTableOnly() {
        return EcsEventTableOnly;
    }
    private static final int EcsEventNoOnSet = (int)65536L;
    /**
     * {@snippet lang=c :
     * #define EcsEventNoOnSet 65536
     * }
     */
    public static int EcsEventNoOnSet() {
        return EcsEventNoOnSet;
    }
    private static final int EcsQueryMatchThis = (int)2048L;
    /**
     * {@snippet lang=c :
     * #define EcsQueryMatchThis 2048
     * }
     */
    public static int EcsQueryMatchThis() {
        return EcsQueryMatchThis;
    }
    private static final int EcsQueryMatchOnlyThis = (int)4096L;
    /**
     * {@snippet lang=c :
     * #define EcsQueryMatchOnlyThis 4096
     * }
     */
    public static int EcsQueryMatchOnlyThis() {
        return EcsQueryMatchOnlyThis;
    }
    private static final int EcsQueryMatchOnlySelf = (int)8192L;
    /**
     * {@snippet lang=c :
     * #define EcsQueryMatchOnlySelf 8192
     * }
     */
    public static int EcsQueryMatchOnlySelf() {
        return EcsQueryMatchOnlySelf;
    }
    private static final int EcsQueryMatchWildcards = (int)16384L;
    /**
     * {@snippet lang=c :
     * #define EcsQueryMatchWildcards 16384
     * }
     */
    public static int EcsQueryMatchWildcards() {
        return EcsQueryMatchWildcards;
    }
    private static final int EcsQueryMatchNothing = (int)32768L;
    /**
     * {@snippet lang=c :
     * #define EcsQueryMatchNothing 32768
     * }
     */
    public static int EcsQueryMatchNothing() {
        return EcsQueryMatchNothing;
    }
    private static final int EcsQueryHasCondSet = (int)65536L;
    /**
     * {@snippet lang=c :
     * #define EcsQueryHasCondSet 65536
     * }
     */
    public static int EcsQueryHasCondSet() {
        return EcsQueryHasCondSet;
    }
    private static final int EcsQueryHasPred = (int)131072L;
    /**
     * {@snippet lang=c :
     * #define EcsQueryHasPred 131072
     * }
     */
    public static int EcsQueryHasPred() {
        return EcsQueryHasPred;
    }
    private static final int EcsQueryHasScopes = (int)262144L;
    /**
     * {@snippet lang=c :
     * #define EcsQueryHasScopes 262144
     * }
     */
    public static int EcsQueryHasScopes() {
        return EcsQueryHasScopes;
    }
    private static final int EcsQueryHasRefs = (int)524288L;
    /**
     * {@snippet lang=c :
     * #define EcsQueryHasRefs 524288
     * }
     */
    public static int EcsQueryHasRefs() {
        return EcsQueryHasRefs;
    }
    private static final int EcsQueryHasOutTerms = (int)1048576L;
    /**
     * {@snippet lang=c :
     * #define EcsQueryHasOutTerms 1048576
     * }
     */
    public static int EcsQueryHasOutTerms() {
        return EcsQueryHasOutTerms;
    }
    private static final int EcsQueryHasNonThisOutTerms = (int)2097152L;
    /**
     * {@snippet lang=c :
     * #define EcsQueryHasNonThisOutTerms 2097152
     * }
     */
    public static int EcsQueryHasNonThisOutTerms() {
        return EcsQueryHasNonThisOutTerms;
    }
    private static final int EcsQueryHasMonitor = (int)4194304L;
    /**
     * {@snippet lang=c :
     * #define EcsQueryHasMonitor 4194304
     * }
     */
    public static int EcsQueryHasMonitor() {
        return EcsQueryHasMonitor;
    }
    private static final int EcsQueryIsTrivial = (int)8388608L;
    /**
     * {@snippet lang=c :
     * #define EcsQueryIsTrivial 8388608
     * }
     */
    public static int EcsQueryIsTrivial() {
        return EcsQueryIsTrivial;
    }
    private static final int EcsQueryHasCacheable = (int)16777216L;
    /**
     * {@snippet lang=c :
     * #define EcsQueryHasCacheable 16777216
     * }
     */
    public static int EcsQueryHasCacheable() {
        return EcsQueryHasCacheable;
    }
    private static final int EcsQueryIsCacheable = (int)33554432L;
    /**
     * {@snippet lang=c :
     * #define EcsQueryIsCacheable 33554432
     * }
     */
    public static int EcsQueryIsCacheable() {
        return EcsQueryIsCacheable;
    }
    private static final int EcsQueryHasTableThisVar = (int)67108864L;
    /**
     * {@snippet lang=c :
     * #define EcsQueryHasTableThisVar 67108864
     * }
     */
    public static int EcsQueryHasTableThisVar() {
        return EcsQueryHasTableThisVar;
    }
    private static final int EcsQueryCacheYieldEmptyTables = (int)134217728L;
    /**
     * {@snippet lang=c :
     * #define EcsQueryCacheYieldEmptyTables 134217728
     * }
     */
    public static int EcsQueryCacheYieldEmptyTables() {
        return EcsQueryCacheYieldEmptyTables;
    }
    private static final int EcsQueryNested = (int)268435456L;
    /**
     * {@snippet lang=c :
     * #define EcsQueryNested 268435456
     * }
     */
    public static int EcsQueryNested() {
        return EcsQueryNested;
    }
    private static final int EcsTermMatchAny = (int)1L;
    /**
     * {@snippet lang=c :
     * #define EcsTermMatchAny 1
     * }
     */
    public static int EcsTermMatchAny() {
        return EcsTermMatchAny;
    }
    private static final int EcsTermMatchAnySrc = (int)2L;
    /**
     * {@snippet lang=c :
     * #define EcsTermMatchAnySrc 2
     * }
     */
    public static int EcsTermMatchAnySrc() {
        return EcsTermMatchAnySrc;
    }
    private static final int EcsTermTransitive = (int)4L;
    /**
     * {@snippet lang=c :
     * #define EcsTermTransitive 4
     * }
     */
    public static int EcsTermTransitive() {
        return EcsTermTransitive;
    }
    private static final int EcsTermReflexive = (int)8L;
    /**
     * {@snippet lang=c :
     * #define EcsTermReflexive 8
     * }
     */
    public static int EcsTermReflexive() {
        return EcsTermReflexive;
    }
    private static final int EcsTermIdInherited = (int)16L;
    /**
     * {@snippet lang=c :
     * #define EcsTermIdInherited 16
     * }
     */
    public static int EcsTermIdInherited() {
        return EcsTermIdInherited;
    }
    private static final int EcsTermIsTrivial = (int)32L;
    /**
     * {@snippet lang=c :
     * #define EcsTermIsTrivial 32
     * }
     */
    public static int EcsTermIsTrivial() {
        return EcsTermIsTrivial;
    }
    private static final int EcsTermIsCacheable = (int)128L;
    /**
     * {@snippet lang=c :
     * #define EcsTermIsCacheable 128
     * }
     */
    public static int EcsTermIsCacheable() {
        return EcsTermIsCacheable;
    }
    private static final int EcsTermIsScope = (int)256L;
    /**
     * {@snippet lang=c :
     * #define EcsTermIsScope 256
     * }
     */
    public static int EcsTermIsScope() {
        return EcsTermIsScope;
    }
    private static final int EcsTermIsMember = (int)512L;
    /**
     * {@snippet lang=c :
     * #define EcsTermIsMember 512
     * }
     */
    public static int EcsTermIsMember() {
        return EcsTermIsMember;
    }
    private static final int EcsTermIsToggle = (int)1024L;
    /**
     * {@snippet lang=c :
     * #define EcsTermIsToggle 1024
     * }
     */
    public static int EcsTermIsToggle() {
        return EcsTermIsToggle;
    }
    private static final int EcsTermKeepAlive = (int)2048L;
    /**
     * {@snippet lang=c :
     * #define EcsTermKeepAlive 2048
     * }
     */
    public static int EcsTermKeepAlive() {
        return EcsTermKeepAlive;
    }
    private static final int EcsTermIsSparse = (int)4096L;
    /**
     * {@snippet lang=c :
     * #define EcsTermIsSparse 4096
     * }
     */
    public static int EcsTermIsSparse() {
        return EcsTermIsSparse;
    }
    private static final int EcsTermIsUnion = (int)8192L;
    /**
     * {@snippet lang=c :
     * #define EcsTermIsUnion 8192
     * }
     */
    public static int EcsTermIsUnion() {
        return EcsTermIsUnion;
    }
    private static final int EcsTermIsOr = (int)16384L;
    /**
     * {@snippet lang=c :
     * #define EcsTermIsOr 16384
     * }
     */
    public static int EcsTermIsOr() {
        return EcsTermIsOr;
    }
    private static final int EcsObserverIsMulti = (int)2L;
    /**
     * {@snippet lang=c :
     * #define EcsObserverIsMulti 2
     * }
     */
    public static int EcsObserverIsMulti() {
        return EcsObserverIsMulti;
    }
    private static final int EcsObserverIsMonitor = (int)4L;
    /**
     * {@snippet lang=c :
     * #define EcsObserverIsMonitor 4
     * }
     */
    public static int EcsObserverIsMonitor() {
        return EcsObserverIsMonitor;
    }
    private static final int EcsObserverIsDisabled = (int)8L;
    /**
     * {@snippet lang=c :
     * #define EcsObserverIsDisabled 8
     * }
     */
    public static int EcsObserverIsDisabled() {
        return EcsObserverIsDisabled;
    }
    private static final int EcsObserverIsParentDisabled = (int)16L;
    /**
     * {@snippet lang=c :
     * #define EcsObserverIsParentDisabled 16
     * }
     */
    public static int EcsObserverIsParentDisabled() {
        return EcsObserverIsParentDisabled;
    }
    private static final int EcsObserverBypassQuery = (int)32L;
    /**
     * {@snippet lang=c :
     * #define EcsObserverBypassQuery 32
     * }
     */
    public static int EcsObserverBypassQuery() {
        return EcsObserverBypassQuery;
    }
    private static final int EcsObserverYieldOnCreate = (int)64L;
    /**
     * {@snippet lang=c :
     * #define EcsObserverYieldOnCreate 64
     * }
     */
    public static int EcsObserverYieldOnCreate() {
        return EcsObserverYieldOnCreate;
    }
    private static final int EcsObserverYieldOnDelete = (int)128L;
    /**
     * {@snippet lang=c :
     * #define EcsObserverYieldOnDelete 128
     * }
     */
    public static int EcsObserverYieldOnDelete() {
        return EcsObserverYieldOnDelete;
    }
    private static final int EcsTableHasBuiltins = (int)2L;
    /**
     * {@snippet lang=c :
     * #define EcsTableHasBuiltins 2
     * }
     */
    public static int EcsTableHasBuiltins() {
        return EcsTableHasBuiltins;
    }
    private static final int EcsTableIsPrefab = (int)4L;
    /**
     * {@snippet lang=c :
     * #define EcsTableIsPrefab 4
     * }
     */
    public static int EcsTableIsPrefab() {
        return EcsTableIsPrefab;
    }
    private static final int EcsTableHasIsA = (int)8L;
    /**
     * {@snippet lang=c :
     * #define EcsTableHasIsA 8
     * }
     */
    public static int EcsTableHasIsA() {
        return EcsTableHasIsA;
    }
    private static final int EcsTableHasChildOf = (int)16L;
    /**
     * {@snippet lang=c :
     * #define EcsTableHasChildOf 16
     * }
     */
    public static int EcsTableHasChildOf() {
        return EcsTableHasChildOf;
    }
    private static final int EcsTableHasName = (int)32L;
    /**
     * {@snippet lang=c :
     * #define EcsTableHasName 32
     * }
     */
    public static int EcsTableHasName() {
        return EcsTableHasName;
    }
    private static final int EcsTableHasPairs = (int)64L;
    /**
     * {@snippet lang=c :
     * #define EcsTableHasPairs 64
     * }
     */
    public static int EcsTableHasPairs() {
        return EcsTableHasPairs;
    }
    private static final int EcsTableHasModule = (int)128L;
    /**
     * {@snippet lang=c :
     * #define EcsTableHasModule 128
     * }
     */
    public static int EcsTableHasModule() {
        return EcsTableHasModule;
    }
    private static final int EcsTableIsDisabled = (int)256L;
    /**
     * {@snippet lang=c :
     * #define EcsTableIsDisabled 256
     * }
     */
    public static int EcsTableIsDisabled() {
        return EcsTableIsDisabled;
    }
    private static final int EcsTableNotQueryable = (int)512L;
    /**
     * {@snippet lang=c :
     * #define EcsTableNotQueryable 512
     * }
     */
    public static int EcsTableNotQueryable() {
        return EcsTableNotQueryable;
    }
    private static final int EcsTableHasCtors = (int)1024L;
    /**
     * {@snippet lang=c :
     * #define EcsTableHasCtors 1024
     * }
     */
    public static int EcsTableHasCtors() {
        return EcsTableHasCtors;
    }
    private static final int EcsTableHasDtors = (int)2048L;
    /**
     * {@snippet lang=c :
     * #define EcsTableHasDtors 2048
     * }
     */
    public static int EcsTableHasDtors() {
        return EcsTableHasDtors;
    }
    private static final int EcsTableHasCopy = (int)4096L;
    /**
     * {@snippet lang=c :
     * #define EcsTableHasCopy 4096
     * }
     */
    public static int EcsTableHasCopy() {
        return EcsTableHasCopy;
    }
    private static final int EcsTableHasMove = (int)8192L;
    /**
     * {@snippet lang=c :
     * #define EcsTableHasMove 8192
     * }
     */
    public static int EcsTableHasMove() {
        return EcsTableHasMove;
    }
    private static final int EcsTableHasToggle = (int)16384L;
    /**
     * {@snippet lang=c :
     * #define EcsTableHasToggle 16384
     * }
     */
    public static int EcsTableHasToggle() {
        return EcsTableHasToggle;
    }
    private static final int EcsTableHasOverrides = (int)32768L;
    /**
     * {@snippet lang=c :
     * #define EcsTableHasOverrides 32768
     * }
     */
    public static int EcsTableHasOverrides() {
        return EcsTableHasOverrides;
    }
    private static final int EcsTableHasOnAdd = (int)65536L;
    /**
     * {@snippet lang=c :
     * #define EcsTableHasOnAdd 65536
     * }
     */
    public static int EcsTableHasOnAdd() {
        return EcsTableHasOnAdd;
    }
    private static final int EcsTableHasOnRemove = (int)131072L;
    /**
     * {@snippet lang=c :
     * #define EcsTableHasOnRemove 131072
     * }
     */
    public static int EcsTableHasOnRemove() {
        return EcsTableHasOnRemove;
    }
    private static final int EcsTableHasOnSet = (int)262144L;
    /**
     * {@snippet lang=c :
     * #define EcsTableHasOnSet 262144
     * }
     */
    public static int EcsTableHasOnSet() {
        return EcsTableHasOnSet;
    }
    private static final int EcsTableHasOnTableFill = (int)524288L;
    /**
     * {@snippet lang=c :
     * #define EcsTableHasOnTableFill 524288
     * }
     */
    public static int EcsTableHasOnTableFill() {
        return EcsTableHasOnTableFill;
    }
    private static final int EcsTableHasOnTableEmpty = (int)1048576L;
    /**
     * {@snippet lang=c :
     * #define EcsTableHasOnTableEmpty 1048576
     * }
     */
    public static int EcsTableHasOnTableEmpty() {
        return EcsTableHasOnTableEmpty;
    }
    private static final int EcsTableHasOnTableCreate = (int)2097152L;
    /**
     * {@snippet lang=c :
     * #define EcsTableHasOnTableCreate 2097152
     * }
     */
    public static int EcsTableHasOnTableCreate() {
        return EcsTableHasOnTableCreate;
    }
    private static final int EcsTableHasOnTableDelete = (int)4194304L;
    /**
     * {@snippet lang=c :
     * #define EcsTableHasOnTableDelete 4194304
     * }
     */
    public static int EcsTableHasOnTableDelete() {
        return EcsTableHasOnTableDelete;
    }
    private static final int EcsTableHasSparse = (int)8388608L;
    /**
     * {@snippet lang=c :
     * #define EcsTableHasSparse 8388608
     * }
     */
    public static int EcsTableHasSparse() {
        return EcsTableHasSparse;
    }
    private static final int EcsTableHasUnion = (int)16777216L;
    /**
     * {@snippet lang=c :
     * #define EcsTableHasUnion 16777216
     * }
     */
    public static int EcsTableHasUnion() {
        return EcsTableHasUnion;
    }
    private static final int EcsTableHasTraversable = (int)67108864L;
    /**
     * {@snippet lang=c :
     * #define EcsTableHasTraversable 67108864
     * }
     */
    public static int EcsTableHasTraversable() {
        return EcsTableHasTraversable;
    }
    private static final int EcsTableMarkedForDelete = (int)1073741824L;
    /**
     * {@snippet lang=c :
     * #define EcsTableMarkedForDelete 1073741824
     * }
     */
    public static int EcsTableMarkedForDelete() {
        return EcsTableMarkedForDelete;
    }
    private static final int EcsTableHasLifecycle = (int)3072L;
    /**
     * {@snippet lang=c :
     * #define EcsTableHasLifecycle 3072
     * }
     */
    public static int EcsTableHasLifecycle() {
        return EcsTableHasLifecycle;
    }
    private static final int EcsTableIsComplex = (int)8408064L;
    /**
     * {@snippet lang=c :
     * #define EcsTableIsComplex 8408064
     * }
     */
    public static int EcsTableIsComplex() {
        return EcsTableIsComplex;
    }
    private static final int EcsTableHasAddActions = (int)328712L;
    /**
     * {@snippet lang=c :
     * #define EcsTableHasAddActions 328712
     * }
     */
    public static int EcsTableHasAddActions() {
        return EcsTableHasAddActions;
    }
    private static final int EcsTableHasRemoveActions = (int)133128L;
    /**
     * {@snippet lang=c :
     * #define EcsTableHasRemoveActions 133128
     * }
     */
    public static int EcsTableHasRemoveActions() {
        return EcsTableHasRemoveActions;
    }
    private static final int EcsTableEdgeFlags = (int)25362432L;
    /**
     * {@snippet lang=c :
     * #define EcsTableEdgeFlags 25362432
     * }
     */
    public static int EcsTableEdgeFlags() {
        return EcsTableEdgeFlags;
    }
    private static final int EcsTableAddEdgeFlags = (int)25231360L;
    /**
     * {@snippet lang=c :
     * #define EcsTableAddEdgeFlags 25231360
     * }
     */
    public static int EcsTableAddEdgeFlags() {
        return EcsTableAddEdgeFlags;
    }
    private static final int EcsTableRemoveEdgeFlags = (int)25296896L;
    /**
     * {@snippet lang=c :
     * #define EcsTableRemoveEdgeFlags 25296896
     * }
     */
    public static int EcsTableRemoveEdgeFlags() {
        return EcsTableRemoveEdgeFlags;
    }
    private static final int EcsAperiodicComponentMonitors = (int)4L;
    /**
     * {@snippet lang=c :
     * #define EcsAperiodicComponentMonitors 4
     * }
     */
    public static int EcsAperiodicComponentMonitors() {
        return EcsAperiodicComponentMonitors;
    }
    private static final int EcsAperiodicEmptyQueries = (int)16L;
    /**
     * {@snippet lang=c :
     * #define EcsAperiodicEmptyQueries 16
     * }
     */
    public static int EcsAperiodicEmptyQueries() {
        return EcsAperiodicEmptyQueries;
    }
    /**
     * {@snippet lang=c :
     * #define __DARWIN_SUF_EXTSN "$DARWIN_EXTSN"
     * }
     */
    public static MemorySegment __DARWIN_SUF_EXTSN() {
        class Holder {
            static final MemorySegment __DARWIN_SUF_EXTSN
                = flecs.LIBRARY_ARENA.allocateFrom("$DARWIN_EXTSN");
        }
        return Holder.__DARWIN_SUF_EXTSN;
    }
    private static final long __DARWIN_C_ANSI = 4096L;
    /**
     * {@snippet lang=c :
     * #define __DARWIN_C_ANSI 4096
     * }
     */
    public static long __DARWIN_C_ANSI() {
        return __DARWIN_C_ANSI;
    }
    private static final long __DARWIN_C_FULL = 900000L;
    /**
     * {@snippet lang=c :
     * #define __DARWIN_C_FULL 900000
     * }
     */
    public static long __DARWIN_C_FULL() {
        return __DARWIN_C_FULL;
    }
    private static final long __DARWIN_C_LEVEL = 900000L;
    /**
     * {@snippet lang=c :
     * #define __DARWIN_C_LEVEL 900000
     * }
     */
    public static long __DARWIN_C_LEVEL() {
        return __DARWIN_C_LEVEL;
    }
    /**
     * {@snippet lang=c :
     * #define __ASSERT_FILE_NAME "jextract$164373061683130772.h"
     * }
     */
    public static MemorySegment __ASSERT_FILE_NAME() {
        class Holder {
            static final MemorySegment __ASSERT_FILE_NAME
                = flecs.LIBRARY_ARENA.allocateFrom("jextract$164373061683130772.h");
        }
        return Holder.__ASSERT_FILE_NAME;
    }
    private static final MemorySegment __DARWIN_NULL = MemorySegment.ofAddress(0L);
    /**
     * {@snippet lang=c :
     * #define __DARWIN_NULL (void*) 0
     * }
     */
    public static MemorySegment __DARWIN_NULL() {
        return __DARWIN_NULL;
    }
    private static final int __DARWIN_WCHAR_MAX = (int)2147483647L;
    /**
     * {@snippet lang=c :
     * #define __DARWIN_WCHAR_MAX 2147483647
     * }
     */
    public static int __DARWIN_WCHAR_MAX() {
        return __DARWIN_WCHAR_MAX;
    }
    private static final int __DARWIN_WCHAR_MIN = (int)-2147483648L;
    /**
     * {@snippet lang=c :
     * #define __DARWIN_WCHAR_MIN -2147483648
     * }
     */
    public static int __DARWIN_WCHAR_MIN() {
        return __DARWIN_WCHAR_MIN;
    }
    private static final int __DARWIN_WEOF = (int)-1L;
    /**
     * {@snippet lang=c :
     * #define __DARWIN_WEOF -1
     * }
     */
    public static int __DARWIN_WEOF() {
        return __DARWIN_WEOF;
    }
    private static final int MAC_OS_X_VERSION_10_0 = (int)1000L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_X_VERSION_10_0 1000
     * }
     */
    public static int MAC_OS_X_VERSION_10_0() {
        return MAC_OS_X_VERSION_10_0;
    }
    private static final int MAC_OS_X_VERSION_10_1 = (int)1010L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_X_VERSION_10_1 1010
     * }
     */
    public static int MAC_OS_X_VERSION_10_1() {
        return MAC_OS_X_VERSION_10_1;
    }
    private static final int MAC_OS_X_VERSION_10_2 = (int)1020L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_X_VERSION_10_2 1020
     * }
     */
    public static int MAC_OS_X_VERSION_10_2() {
        return MAC_OS_X_VERSION_10_2;
    }
    private static final int MAC_OS_X_VERSION_10_3 = (int)1030L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_X_VERSION_10_3 1030
     * }
     */
    public static int MAC_OS_X_VERSION_10_3() {
        return MAC_OS_X_VERSION_10_3;
    }
    private static final int MAC_OS_X_VERSION_10_4 = (int)1040L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_X_VERSION_10_4 1040
     * }
     */
    public static int MAC_OS_X_VERSION_10_4() {
        return MAC_OS_X_VERSION_10_4;
    }
    private static final int MAC_OS_X_VERSION_10_5 = (int)1050L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_X_VERSION_10_5 1050
     * }
     */
    public static int MAC_OS_X_VERSION_10_5() {
        return MAC_OS_X_VERSION_10_5;
    }
    private static final int MAC_OS_X_VERSION_10_6 = (int)1060L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_X_VERSION_10_6 1060
     * }
     */
    public static int MAC_OS_X_VERSION_10_6() {
        return MAC_OS_X_VERSION_10_6;
    }
    private static final int MAC_OS_X_VERSION_10_7 = (int)1070L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_X_VERSION_10_7 1070
     * }
     */
    public static int MAC_OS_X_VERSION_10_7() {
        return MAC_OS_X_VERSION_10_7;
    }
    private static final int MAC_OS_X_VERSION_10_8 = (int)1080L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_X_VERSION_10_8 1080
     * }
     */
    public static int MAC_OS_X_VERSION_10_8() {
        return MAC_OS_X_VERSION_10_8;
    }
    private static final int MAC_OS_X_VERSION_10_9 = (int)1090L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_X_VERSION_10_9 1090
     * }
     */
    public static int MAC_OS_X_VERSION_10_9() {
        return MAC_OS_X_VERSION_10_9;
    }
    private static final int MAC_OS_X_VERSION_10_10 = (int)101000L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_X_VERSION_10_10 101000
     * }
     */
    public static int MAC_OS_X_VERSION_10_10() {
        return MAC_OS_X_VERSION_10_10;
    }
    private static final int MAC_OS_X_VERSION_10_10_2 = (int)101002L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_X_VERSION_10_10_2 101002
     * }
     */
    public static int MAC_OS_X_VERSION_10_10_2() {
        return MAC_OS_X_VERSION_10_10_2;
    }
    private static final int MAC_OS_X_VERSION_10_10_3 = (int)101003L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_X_VERSION_10_10_3 101003
     * }
     */
    public static int MAC_OS_X_VERSION_10_10_3() {
        return MAC_OS_X_VERSION_10_10_3;
    }
    private static final int MAC_OS_X_VERSION_10_11 = (int)101100L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_X_VERSION_10_11 101100
     * }
     */
    public static int MAC_OS_X_VERSION_10_11() {
        return MAC_OS_X_VERSION_10_11;
    }
    private static final int MAC_OS_X_VERSION_10_11_2 = (int)101102L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_X_VERSION_10_11_2 101102
     * }
     */
    public static int MAC_OS_X_VERSION_10_11_2() {
        return MAC_OS_X_VERSION_10_11_2;
    }
    private static final int MAC_OS_X_VERSION_10_11_3 = (int)101103L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_X_VERSION_10_11_3 101103
     * }
     */
    public static int MAC_OS_X_VERSION_10_11_3() {
        return MAC_OS_X_VERSION_10_11_3;
    }
    private static final int MAC_OS_X_VERSION_10_11_4 = (int)101104L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_X_VERSION_10_11_4 101104
     * }
     */
    public static int MAC_OS_X_VERSION_10_11_4() {
        return MAC_OS_X_VERSION_10_11_4;
    }
    private static final int MAC_OS_X_VERSION_10_12 = (int)101200L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_X_VERSION_10_12 101200
     * }
     */
    public static int MAC_OS_X_VERSION_10_12() {
        return MAC_OS_X_VERSION_10_12;
    }
    private static final int MAC_OS_X_VERSION_10_12_1 = (int)101201L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_X_VERSION_10_12_1 101201
     * }
     */
    public static int MAC_OS_X_VERSION_10_12_1() {
        return MAC_OS_X_VERSION_10_12_1;
    }
    private static final int MAC_OS_X_VERSION_10_12_2 = (int)101202L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_X_VERSION_10_12_2 101202
     * }
     */
    public static int MAC_OS_X_VERSION_10_12_2() {
        return MAC_OS_X_VERSION_10_12_2;
    }
    private static final int MAC_OS_X_VERSION_10_12_4 = (int)101204L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_X_VERSION_10_12_4 101204
     * }
     */
    public static int MAC_OS_X_VERSION_10_12_4() {
        return MAC_OS_X_VERSION_10_12_4;
    }
    private static final int MAC_OS_X_VERSION_10_13 = (int)101300L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_X_VERSION_10_13 101300
     * }
     */
    public static int MAC_OS_X_VERSION_10_13() {
        return MAC_OS_X_VERSION_10_13;
    }
    private static final int MAC_OS_X_VERSION_10_13_1 = (int)101301L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_X_VERSION_10_13_1 101301
     * }
     */
    public static int MAC_OS_X_VERSION_10_13_1() {
        return MAC_OS_X_VERSION_10_13_1;
    }
    private static final int MAC_OS_X_VERSION_10_13_2 = (int)101302L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_X_VERSION_10_13_2 101302
     * }
     */
    public static int MAC_OS_X_VERSION_10_13_2() {
        return MAC_OS_X_VERSION_10_13_2;
    }
    private static final int MAC_OS_X_VERSION_10_13_4 = (int)101304L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_X_VERSION_10_13_4 101304
     * }
     */
    public static int MAC_OS_X_VERSION_10_13_4() {
        return MAC_OS_X_VERSION_10_13_4;
    }
    private static final int MAC_OS_X_VERSION_10_14 = (int)101400L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_X_VERSION_10_14 101400
     * }
     */
    public static int MAC_OS_X_VERSION_10_14() {
        return MAC_OS_X_VERSION_10_14;
    }
    private static final int MAC_OS_X_VERSION_10_14_1 = (int)101401L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_X_VERSION_10_14_1 101401
     * }
     */
    public static int MAC_OS_X_VERSION_10_14_1() {
        return MAC_OS_X_VERSION_10_14_1;
    }
    private static final int MAC_OS_X_VERSION_10_14_4 = (int)101404L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_X_VERSION_10_14_4 101404
     * }
     */
    public static int MAC_OS_X_VERSION_10_14_4() {
        return MAC_OS_X_VERSION_10_14_4;
    }
    private static final int MAC_OS_X_VERSION_10_14_5 = (int)101405L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_X_VERSION_10_14_5 101405
     * }
     */
    public static int MAC_OS_X_VERSION_10_14_5() {
        return MAC_OS_X_VERSION_10_14_5;
    }
    private static final int MAC_OS_X_VERSION_10_14_6 = (int)101406L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_X_VERSION_10_14_6 101406
     * }
     */
    public static int MAC_OS_X_VERSION_10_14_6() {
        return MAC_OS_X_VERSION_10_14_6;
    }
    private static final int MAC_OS_X_VERSION_10_15 = (int)101500L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_X_VERSION_10_15 101500
     * }
     */
    public static int MAC_OS_X_VERSION_10_15() {
        return MAC_OS_X_VERSION_10_15;
    }
    private static final int MAC_OS_X_VERSION_10_15_1 = (int)101501L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_X_VERSION_10_15_1 101501
     * }
     */
    public static int MAC_OS_X_VERSION_10_15_1() {
        return MAC_OS_X_VERSION_10_15_1;
    }
    private static final int MAC_OS_X_VERSION_10_15_4 = (int)101504L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_X_VERSION_10_15_4 101504
     * }
     */
    public static int MAC_OS_X_VERSION_10_15_4() {
        return MAC_OS_X_VERSION_10_15_4;
    }
    private static final int MAC_OS_X_VERSION_10_16 = (int)101600L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_X_VERSION_10_16 101600
     * }
     */
    public static int MAC_OS_X_VERSION_10_16() {
        return MAC_OS_X_VERSION_10_16;
    }
    private static final int MAC_OS_VERSION_11_0 = (int)110000L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_VERSION_11_0 110000
     * }
     */
    public static int MAC_OS_VERSION_11_0() {
        return MAC_OS_VERSION_11_0;
    }
    private static final int MAC_OS_VERSION_11_1 = (int)110100L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_VERSION_11_1 110100
     * }
     */
    public static int MAC_OS_VERSION_11_1() {
        return MAC_OS_VERSION_11_1;
    }
    private static final int MAC_OS_VERSION_11_3 = (int)110300L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_VERSION_11_3 110300
     * }
     */
    public static int MAC_OS_VERSION_11_3() {
        return MAC_OS_VERSION_11_3;
    }
    private static final int MAC_OS_VERSION_11_4 = (int)110400L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_VERSION_11_4 110400
     * }
     */
    public static int MAC_OS_VERSION_11_4() {
        return MAC_OS_VERSION_11_4;
    }
    private static final int MAC_OS_VERSION_11_5 = (int)110500L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_VERSION_11_5 110500
     * }
     */
    public static int MAC_OS_VERSION_11_5() {
        return MAC_OS_VERSION_11_5;
    }
    private static final int MAC_OS_VERSION_11_6 = (int)110600L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_VERSION_11_6 110600
     * }
     */
    public static int MAC_OS_VERSION_11_6() {
        return MAC_OS_VERSION_11_6;
    }
    private static final int MAC_OS_VERSION_12_0 = (int)120000L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_VERSION_12_0 120000
     * }
     */
    public static int MAC_OS_VERSION_12_0() {
        return MAC_OS_VERSION_12_0;
    }
    private static final int MAC_OS_VERSION_12_1 = (int)120100L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_VERSION_12_1 120100
     * }
     */
    public static int MAC_OS_VERSION_12_1() {
        return MAC_OS_VERSION_12_1;
    }
    private static final int MAC_OS_VERSION_12_2 = (int)120200L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_VERSION_12_2 120200
     * }
     */
    public static int MAC_OS_VERSION_12_2() {
        return MAC_OS_VERSION_12_2;
    }
    private static final int MAC_OS_VERSION_12_3 = (int)120300L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_VERSION_12_3 120300
     * }
     */
    public static int MAC_OS_VERSION_12_3() {
        return MAC_OS_VERSION_12_3;
    }
    private static final int MAC_OS_VERSION_12_4 = (int)120400L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_VERSION_12_4 120400
     * }
     */
    public static int MAC_OS_VERSION_12_4() {
        return MAC_OS_VERSION_12_4;
    }
    private static final int MAC_OS_VERSION_12_5 = (int)120500L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_VERSION_12_5 120500
     * }
     */
    public static int MAC_OS_VERSION_12_5() {
        return MAC_OS_VERSION_12_5;
    }
    private static final int MAC_OS_VERSION_12_6 = (int)120600L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_VERSION_12_6 120600
     * }
     */
    public static int MAC_OS_VERSION_12_6() {
        return MAC_OS_VERSION_12_6;
    }
    private static final int MAC_OS_VERSION_12_7 = (int)120700L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_VERSION_12_7 120700
     * }
     */
    public static int MAC_OS_VERSION_12_7() {
        return MAC_OS_VERSION_12_7;
    }
    private static final int MAC_OS_VERSION_13_0 = (int)130000L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_VERSION_13_0 130000
     * }
     */
    public static int MAC_OS_VERSION_13_0() {
        return MAC_OS_VERSION_13_0;
    }
    private static final int MAC_OS_VERSION_13_1 = (int)130100L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_VERSION_13_1 130100
     * }
     */
    public static int MAC_OS_VERSION_13_1() {
        return MAC_OS_VERSION_13_1;
    }
    private static final int MAC_OS_VERSION_13_2 = (int)130200L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_VERSION_13_2 130200
     * }
     */
    public static int MAC_OS_VERSION_13_2() {
        return MAC_OS_VERSION_13_2;
    }
    private static final int MAC_OS_VERSION_13_3 = (int)130300L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_VERSION_13_3 130300
     * }
     */
    public static int MAC_OS_VERSION_13_3() {
        return MAC_OS_VERSION_13_3;
    }
    private static final int MAC_OS_VERSION_13_4 = (int)130400L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_VERSION_13_4 130400
     * }
     */
    public static int MAC_OS_VERSION_13_4() {
        return MAC_OS_VERSION_13_4;
    }
    private static final int MAC_OS_VERSION_13_5 = (int)130500L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_VERSION_13_5 130500
     * }
     */
    public static int MAC_OS_VERSION_13_5() {
        return MAC_OS_VERSION_13_5;
    }
    private static final int MAC_OS_VERSION_13_6 = (int)130600L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_VERSION_13_6 130600
     * }
     */
    public static int MAC_OS_VERSION_13_6() {
        return MAC_OS_VERSION_13_6;
    }
    private static final int MAC_OS_VERSION_14_0 = (int)140000L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_VERSION_14_0 140000
     * }
     */
    public static int MAC_OS_VERSION_14_0() {
        return MAC_OS_VERSION_14_0;
    }
    private static final int MAC_OS_VERSION_14_1 = (int)140100L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_VERSION_14_1 140100
     * }
     */
    public static int MAC_OS_VERSION_14_1() {
        return MAC_OS_VERSION_14_1;
    }
    private static final int MAC_OS_VERSION_14_2 = (int)140200L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_VERSION_14_2 140200
     * }
     */
    public static int MAC_OS_VERSION_14_2() {
        return MAC_OS_VERSION_14_2;
    }
    private static final int MAC_OS_VERSION_14_3 = (int)140300L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_VERSION_14_3 140300
     * }
     */
    public static int MAC_OS_VERSION_14_3() {
        return MAC_OS_VERSION_14_3;
    }
    private static final int MAC_OS_VERSION_14_4 = (int)140400L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_VERSION_14_4 140400
     * }
     */
    public static int MAC_OS_VERSION_14_4() {
        return MAC_OS_VERSION_14_4;
    }
    private static final int MAC_OS_VERSION_14_5 = (int)140500L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_VERSION_14_5 140500
     * }
     */
    public static int MAC_OS_VERSION_14_5() {
        return MAC_OS_VERSION_14_5;
    }
    private static final int MAC_OS_VERSION_15_0 = (int)150000L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_VERSION_15_0 150000
     * }
     */
    public static int MAC_OS_VERSION_15_0() {
        return MAC_OS_VERSION_15_0;
    }
    private static final int MAC_OS_VERSION_15_1 = (int)150100L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_VERSION_15_1 150100
     * }
     */
    public static int MAC_OS_VERSION_15_1() {
        return MAC_OS_VERSION_15_1;
    }
    private static final int __MAC_OS_X_VERSION_MAX_ALLOWED = (int)150100L;
    /**
     * {@snippet lang=c :
     * #define __MAC_OS_X_VERSION_MAX_ALLOWED 150100
     * }
     */
    public static int __MAC_OS_X_VERSION_MAX_ALLOWED() {
        return __MAC_OS_X_VERSION_MAX_ALLOWED;
    }
    private static final MemorySegment NULL = MemorySegment.ofAddress(0L);
    /**
     * {@snippet lang=c :
     * #define NULL (void*) 0
     * }
     */
    public static MemorySegment NULL() {
        return NULL;
    }
    private static final long USER_ADDR_NULL = 0L;
    /**
     * {@snippet lang=c :
     * #define USER_ADDR_NULL 0
     * }
     */
    public static long USER_ADDR_NULL() {
        return USER_ADDR_NULL;
    }
    private static final long INT64_MAX = 9223372036854775807L;
    /**
     * {@snippet lang=c :
     * #define INT64_MAX 9223372036854775807
     * }
     */
    public static long INT64_MAX() {
        return INT64_MAX;
    }
    private static final int INT8_MIN = (int)-128L;
    /**
     * {@snippet lang=c :
     * #define INT8_MIN -128
     * }
     */
    public static int INT8_MIN() {
        return INT8_MIN;
    }
    private static final int INT16_MIN = (int)-32768L;
    /**
     * {@snippet lang=c :
     * #define INT16_MIN -32768
     * }
     */
    public static int INT16_MIN() {
        return INT16_MIN;
    }
    private static final int INT32_MIN = (int)-2147483648L;
    /**
     * {@snippet lang=c :
     * #define INT32_MIN -2147483648
     * }
     */
    public static int INT32_MIN() {
        return INT32_MIN;
    }
    private static final long INT64_MIN = -9223372036854775808L;
    /**
     * {@snippet lang=c :
     * #define INT64_MIN -9223372036854775808
     * }
     */
    public static long INT64_MIN() {
        return INT64_MIN;
    }
    private static final int UINT32_MAX = (int)4294967295L;
    /**
     * {@snippet lang=c :
     * #define UINT32_MAX 4294967295
     * }
     */
    public static int UINT32_MAX() {
        return UINT32_MAX;
    }
    private static final long UINT64_MAX = -1L;
    /**
     * {@snippet lang=c :
     * #define UINT64_MAX -1
     * }
     */
    public static long UINT64_MAX() {
        return UINT64_MAX;
    }
    private static final int INT_LEAST8_MIN = (int)-128L;
    /**
     * {@snippet lang=c :
     * #define INT_LEAST8_MIN -128
     * }
     */
    public static int INT_LEAST8_MIN() {
        return INT_LEAST8_MIN;
    }
    private static final int INT_LEAST16_MIN = (int)-32768L;
    /**
     * {@snippet lang=c :
     * #define INT_LEAST16_MIN -32768
     * }
     */
    public static int INT_LEAST16_MIN() {
        return INT_LEAST16_MIN;
    }
    private static final int INT_LEAST32_MIN = (int)-2147483648L;
    /**
     * {@snippet lang=c :
     * #define INT_LEAST32_MIN -2147483648
     * }
     */
    public static int INT_LEAST32_MIN() {
        return INT_LEAST32_MIN;
    }
    private static final long INT_LEAST64_MIN = -9223372036854775808L;
    /**
     * {@snippet lang=c :
     * #define INT_LEAST64_MIN -9223372036854775808
     * }
     */
    public static long INT_LEAST64_MIN() {
        return INT_LEAST64_MIN;
    }
    private static final int INT_LEAST8_MAX = (int)127L;
    /**
     * {@snippet lang=c :
     * #define INT_LEAST8_MAX 127
     * }
     */
    public static int INT_LEAST8_MAX() {
        return INT_LEAST8_MAX;
    }
    private static final int INT_LEAST16_MAX = (int)32767L;
    /**
     * {@snippet lang=c :
     * #define INT_LEAST16_MAX 32767
     * }
     */
    public static int INT_LEAST16_MAX() {
        return INT_LEAST16_MAX;
    }
    private static final int INT_LEAST32_MAX = (int)2147483647L;
    /**
     * {@snippet lang=c :
     * #define INT_LEAST32_MAX 2147483647
     * }
     */
    public static int INT_LEAST32_MAX() {
        return INT_LEAST32_MAX;
    }
    private static final long INT_LEAST64_MAX = 9223372036854775807L;
    /**
     * {@snippet lang=c :
     * #define INT_LEAST64_MAX 9223372036854775807
     * }
     */
    public static long INT_LEAST64_MAX() {
        return INT_LEAST64_MAX;
    }
    private static final int UINT_LEAST8_MAX = (int)255L;
    /**
     * {@snippet lang=c :
     * #define UINT_LEAST8_MAX 255
     * }
     */
    public static int UINT_LEAST8_MAX() {
        return UINT_LEAST8_MAX;
    }
    private static final int UINT_LEAST16_MAX = (int)65535L;
    /**
     * {@snippet lang=c :
     * #define UINT_LEAST16_MAX 65535
     * }
     */
    public static int UINT_LEAST16_MAX() {
        return UINT_LEAST16_MAX;
    }
    private static final int UINT_LEAST32_MAX = (int)4294967295L;
    /**
     * {@snippet lang=c :
     * #define UINT_LEAST32_MAX 4294967295
     * }
     */
    public static int UINT_LEAST32_MAX() {
        return UINT_LEAST32_MAX;
    }
    private static final long UINT_LEAST64_MAX = -1L;
    /**
     * {@snippet lang=c :
     * #define UINT_LEAST64_MAX -1
     * }
     */
    public static long UINT_LEAST64_MAX() {
        return UINT_LEAST64_MAX;
    }
    private static final int INT_FAST8_MIN = (int)-128L;
    /**
     * {@snippet lang=c :
     * #define INT_FAST8_MIN -128
     * }
     */
    public static int INT_FAST8_MIN() {
        return INT_FAST8_MIN;
    }
    private static final int INT_FAST16_MIN = (int)-32768L;
    /**
     * {@snippet lang=c :
     * #define INT_FAST16_MIN -32768
     * }
     */
    public static int INT_FAST16_MIN() {
        return INT_FAST16_MIN;
    }
    private static final int INT_FAST32_MIN = (int)-2147483648L;
    /**
     * {@snippet lang=c :
     * #define INT_FAST32_MIN -2147483648
     * }
     */
    public static int INT_FAST32_MIN() {
        return INT_FAST32_MIN;
    }
    private static final long INT_FAST64_MIN = -9223372036854775808L;
    /**
     * {@snippet lang=c :
     * #define INT_FAST64_MIN -9223372036854775808
     * }
     */
    public static long INT_FAST64_MIN() {
        return INT_FAST64_MIN;
    }
    private static final int INT_FAST8_MAX = (int)127L;
    /**
     * {@snippet lang=c :
     * #define INT_FAST8_MAX 127
     * }
     */
    public static int INT_FAST8_MAX() {
        return INT_FAST8_MAX;
    }
    private static final int INT_FAST16_MAX = (int)32767L;
    /**
     * {@snippet lang=c :
     * #define INT_FAST16_MAX 32767
     * }
     */
    public static int INT_FAST16_MAX() {
        return INT_FAST16_MAX;
    }
    private static final int INT_FAST32_MAX = (int)2147483647L;
    /**
     * {@snippet lang=c :
     * #define INT_FAST32_MAX 2147483647
     * }
     */
    public static int INT_FAST32_MAX() {
        return INT_FAST32_MAX;
    }
    private static final long INT_FAST64_MAX = 9223372036854775807L;
    /**
     * {@snippet lang=c :
     * #define INT_FAST64_MAX 9223372036854775807
     * }
     */
    public static long INT_FAST64_MAX() {
        return INT_FAST64_MAX;
    }
    private static final int UINT_FAST8_MAX = (int)255L;
    /**
     * {@snippet lang=c :
     * #define UINT_FAST8_MAX 255
     * }
     */
    public static int UINT_FAST8_MAX() {
        return UINT_FAST8_MAX;
    }
    private static final int UINT_FAST16_MAX = (int)65535L;
    /**
     * {@snippet lang=c :
     * #define UINT_FAST16_MAX 65535
     * }
     */
    public static int UINT_FAST16_MAX() {
        return UINT_FAST16_MAX;
    }
    private static final int UINT_FAST32_MAX = (int)4294967295L;
    /**
     * {@snippet lang=c :
     * #define UINT_FAST32_MAX 4294967295
     * }
     */
    public static int UINT_FAST32_MAX() {
        return UINT_FAST32_MAX;
    }
    private static final long UINT_FAST64_MAX = -1L;
    /**
     * {@snippet lang=c :
     * #define UINT_FAST64_MAX -1
     * }
     */
    public static long UINT_FAST64_MAX() {
        return UINT_FAST64_MAX;
    }
    private static final long INTPTR_MAX = 9223372036854775807L;
    /**
     * {@snippet lang=c :
     * #define INTPTR_MAX 9223372036854775807
     * }
     */
    public static long INTPTR_MAX() {
        return INTPTR_MAX;
    }
    private static final long INTPTR_MIN = -9223372036854775808L;
    /**
     * {@snippet lang=c :
     * #define INTPTR_MIN -9223372036854775808
     * }
     */
    public static long INTPTR_MIN() {
        return INTPTR_MIN;
    }
    private static final long UINTPTR_MAX = -1L;
    /**
     * {@snippet lang=c :
     * #define UINTPTR_MAX -1
     * }
     */
    public static long UINTPTR_MAX() {
        return UINTPTR_MAX;
    }
    private static final long INTMAX_MAX = 9223372036854775807L;
    /**
     * {@snippet lang=c :
     * #define INTMAX_MAX 9223372036854775807
     * }
     */
    public static long INTMAX_MAX() {
        return INTMAX_MAX;
    }
    private static final long UINTMAX_MAX = -1L;
    /**
     * {@snippet lang=c :
     * #define UINTMAX_MAX -1
     * }
     */
    public static long UINTMAX_MAX() {
        return UINTMAX_MAX;
    }
    private static final long INTMAX_MIN = -9223372036854775808L;
    /**
     * {@snippet lang=c :
     * #define INTMAX_MIN -9223372036854775808
     * }
     */
    public static long INTMAX_MIN() {
        return INTMAX_MIN;
    }
    private static final long PTRDIFF_MIN = -9223372036854775808L;
    /**
     * {@snippet lang=c :
     * #define PTRDIFF_MIN -9223372036854775808
     * }
     */
    public static long PTRDIFF_MIN() {
        return PTRDIFF_MIN;
    }
    private static final long PTRDIFF_MAX = 9223372036854775807L;
    /**
     * {@snippet lang=c :
     * #define PTRDIFF_MAX 9223372036854775807
     * }
     */
    public static long PTRDIFF_MAX() {
        return PTRDIFF_MAX;
    }
    private static final long SIZE_MAX = -1L;
    /**
     * {@snippet lang=c :
     * #define SIZE_MAX -1
     * }
     */
    public static long SIZE_MAX() {
        return SIZE_MAX;
    }
    private static final long RSIZE_MAX = 9223372036854775807L;
    /**
     * {@snippet lang=c :
     * #define RSIZE_MAX 9223372036854775807
     * }
     */
    public static long RSIZE_MAX() {
        return RSIZE_MAX;
    }
    private static final int WCHAR_MAX = (int)2147483647L;
    /**
     * {@snippet lang=c :
     * #define WCHAR_MAX 2147483647
     * }
     */
    public static int WCHAR_MAX() {
        return WCHAR_MAX;
    }
    private static final int WCHAR_MIN = (int)-2147483648L;
    /**
     * {@snippet lang=c :
     * #define WCHAR_MIN -2147483648
     * }
     */
    public static int WCHAR_MIN() {
        return WCHAR_MIN;
    }
    private static final int WINT_MIN = (int)-2147483648L;
    /**
     * {@snippet lang=c :
     * #define WINT_MIN -2147483648
     * }
     */
    public static int WINT_MIN() {
        return WINT_MIN;
    }
    private static final int WINT_MAX = (int)2147483647L;
    /**
     * {@snippet lang=c :
     * #define WINT_MAX 2147483647
     * }
     */
    public static int WINT_MAX() {
        return WINT_MAX;
    }
    private static final int SIG_ATOMIC_MIN = (int)-2147483648L;
    /**
     * {@snippet lang=c :
     * #define SIG_ATOMIC_MIN -2147483648
     * }
     */
    public static int SIG_ATOMIC_MIN() {
        return SIG_ATOMIC_MIN;
    }
    private static final int SIG_ATOMIC_MAX = (int)2147483647L;
    /**
     * {@snippet lang=c :
     * #define SIG_ATOMIC_MAX 2147483647
     * }
     */
    public static int SIG_ATOMIC_MAX() {
        return SIG_ATOMIC_MAX;
    }
    private static final int ecs_world_t_magic = (int)1701016439L;
    /**
     * {@snippet lang=c :
     * #define ecs_world_t_magic 1701016439
     * }
     */
    public static int ecs_world_t_magic() {
        return ecs_world_t_magic;
    }
    private static final int ecs_stage_t_magic = (int)1701016435L;
    /**
     * {@snippet lang=c :
     * #define ecs_stage_t_magic 1701016435
     * }
     */
    public static int ecs_stage_t_magic() {
        return ecs_stage_t_magic;
    }
    private static final int ecs_query_t_magic = (int)1701016437L;
    /**
     * {@snippet lang=c :
     * #define ecs_query_t_magic 1701016437
     * }
     */
    public static int ecs_query_t_magic() {
        return ecs_query_t_magic;
    }
    private static final int ecs_observer_t_magic = (int)1701016418L;
    /**
     * {@snippet lang=c :
     * #define ecs_observer_t_magic 1701016418
     * }
     */
    public static int ecs_observer_t_magic() {
        return ecs_observer_t_magic;
    }
    private static final int ECS_ROW_MASK = (int)268435455L;
    /**
     * {@snippet lang=c :
     * #define ECS_ROW_MASK 268435455
     * }
     */
    public static int ECS_ROW_MASK() {
        return ECS_ROW_MASK;
    }
    private static final int ECS_ROW_FLAGS_MASK = (int)4026531840L;
    /**
     * {@snippet lang=c :
     * #define ECS_ROW_FLAGS_MASK 4026531840
     * }
     */
    public static int ECS_ROW_FLAGS_MASK() {
        return ECS_ROW_FLAGS_MASK;
    }
    private static final long ECS_ID_FLAGS_MASK = -1152921504606846976L;
    /**
     * {@snippet lang=c :
     * #define ECS_ID_FLAGS_MASK -1152921504606846976
     * }
     */
    public static long ECS_ID_FLAGS_MASK() {
        return ECS_ID_FLAGS_MASK;
    }
    private static final long ECS_ENTITY_MASK = 4294967295L;
    /**
     * {@snippet lang=c :
     * #define ECS_ENTITY_MASK 4294967295
     * }
     */
    public static long ECS_ENTITY_MASK() {
        return ECS_ENTITY_MASK;
    }
    private static final long ECS_GENERATION_MASK = 281470681743360L;
    /**
     * {@snippet lang=c :
     * #define ECS_GENERATION_MASK 281470681743360
     * }
     */
    public static long ECS_GENERATION_MASK() {
        return ECS_GENERATION_MASK;
    }
    private static final long ECS_COMPONENT_MASK = 1152921504606846975L;
    /**
     * {@snippet lang=c :
     * #define ECS_COMPONENT_MASK 1152921504606846975
     * }
     */
    public static long ECS_COMPONENT_MASK() {
        return ECS_COMPONENT_MASK;
    }
    private static final int EcsIterNextYield = (int)0L;
    /**
     * {@snippet lang=c :
     * #define EcsIterNextYield 0
     * }
     */
    public static int EcsIterNextYield() {
        return EcsIterNextYield;
    }
    private static final int EcsIterYield = (int)-1L;
    /**
     * {@snippet lang=c :
     * #define EcsIterYield -1
     * }
     */
    public static int EcsIterYield() {
        return EcsIterYield;
    }
    private static final int EcsIterNext = (int)1L;
    /**
     * {@snippet lang=c :
     * #define EcsIterNext 1
     * }
     */
    public static int EcsIterNext() {
        return EcsIterNext;
    }
    private static final int FLECS_SPARSE_PAGE_SIZE = (int)64L;
    /**
     * {@snippet lang=c :
     * #define FLECS_SPARSE_PAGE_SIZE 64
     * }
     */
    public static int FLECS_SPARSE_PAGE_SIZE() {
        return FLECS_SPARSE_PAGE_SIZE;
    }
    private static final int ECS_STACK_PAGE_SIZE = (int)4096L;
    /**
     * {@snippet lang=c :
     * #define ECS_STACK_PAGE_SIZE 4096
     * }
     */
    public static int ECS_STACK_PAGE_SIZE() {
        return ECS_STACK_PAGE_SIZE;
    }
    private static final int ECS_STRBUF_SMALL_STRING_SIZE = (int)512L;
    /**
     * {@snippet lang=c :
     * #define ECS_STRBUF_SMALL_STRING_SIZE 512
     * }
     */
    public static int ECS_STRBUF_SMALL_STRING_SIZE() {
        return ECS_STRBUF_SMALL_STRING_SIZE;
    }
    private static final int ECS_STRBUF_MAX_LIST_DEPTH = (int)32L;
    /**
     * {@snippet lang=c :
     * #define ECS_STRBUF_MAX_LIST_DEPTH 32
     * }
     */
    public static int ECS_STRBUF_MAX_LIST_DEPTH() {
        return ECS_STRBUF_MAX_LIST_DEPTH;
    }
    private static final int EWOULDBLOCK = (int)35L;
    /**
     * {@snippet lang=c :
     * #define EWOULDBLOCK 35
     * }
     */
    public static int EWOULDBLOCK() {
        return EWOULDBLOCK;
    }
    private static final int EOF = (int)-1L;
    /**
     * {@snippet lang=c :
     * #define EOF -1
     * }
     */
    public static int EOF() {
        return EOF;
    }
    /**
     * {@snippet lang=c :
     * #define P_tmpdir "/var/tmp/"
     * }
     */
    public static MemorySegment P_tmpdir() {
        class Holder {
            static final MemorySegment P_tmpdir
                = flecs.LIBRARY_ARENA.allocateFrom("/var/tmp/");
        }
        return Holder.P_tmpdir;
    }
    private static final long EcsSelf = -9223372036854775808L;
    /**
     * {@snippet lang=c :
     * #define EcsSelf -9223372036854775808
     * }
     */
    public static long EcsSelf() {
        return EcsSelf;
    }
    private static final long EcsUp = 4611686018427387904L;
    /**
     * {@snippet lang=c :
     * #define EcsUp 4611686018427387904
     * }
     */
    public static long EcsUp() {
        return EcsUp;
    }
    private static final long EcsTrav = 2305843009213693952L;
    /**
     * {@snippet lang=c :
     * #define EcsTrav 2305843009213693952
     * }
     */
    public static long EcsTrav() {
        return EcsTrav;
    }
    private static final long EcsCascade = 1152921504606846976L;
    /**
     * {@snippet lang=c :
     * #define EcsCascade 1152921504606846976
     * }
     */
    public static long EcsCascade() {
        return EcsCascade;
    }
    private static final long EcsDesc = 576460752303423488L;
    /**
     * {@snippet lang=c :
     * #define EcsDesc 576460752303423488
     * }
     */
    public static long EcsDesc() {
        return EcsDesc;
    }
    private static final long EcsIsVariable = 288230376151711744L;
    /**
     * {@snippet lang=c :
     * #define EcsIsVariable 288230376151711744
     * }
     */
    public static long EcsIsVariable() {
        return EcsIsVariable;
    }
    private static final long EcsIsEntity = 144115188075855872L;
    /**
     * {@snippet lang=c :
     * #define EcsIsEntity 144115188075855872
     * }
     */
    public static long EcsIsEntity() {
        return EcsIsEntity;
    }
    private static final long EcsIsName = 72057594037927936L;
    /**
     * {@snippet lang=c :
     * #define EcsIsName 72057594037927936
     * }
     */
    public static long EcsIsName() {
        return EcsIsName;
    }
    private static final long EcsTraverseFlags = -576460752303423488L;
    /**
     * {@snippet lang=c :
     * #define EcsTraverseFlags -576460752303423488
     * }
     */
    public static long EcsTraverseFlags() {
        return EcsTraverseFlags;
    }
    private static final long EcsTermRefFlags = -72057594037927936L;
    /**
     * {@snippet lang=c :
     * #define EcsTermRefFlags -72057594037927936
     * }
     */
    public static long EcsTermRefFlags() {
        return EcsTermRefFlags;
    }
    private static final int ECS_TYPE_HOOK_CTOR = (int)1L;
    /**
     * {@snippet lang=c :
     * #define ECS_TYPE_HOOK_CTOR 1
     * }
     */
    public static int ECS_TYPE_HOOK_CTOR() {
        return ECS_TYPE_HOOK_CTOR;
    }
    private static final int ECS_TYPE_HOOK_DTOR = (int)2L;
    /**
     * {@snippet lang=c :
     * #define ECS_TYPE_HOOK_DTOR 2
     * }
     */
    public static int ECS_TYPE_HOOK_DTOR() {
        return ECS_TYPE_HOOK_DTOR;
    }
    private static final int ECS_TYPE_HOOK_COPY = (int)4L;
    /**
     * {@snippet lang=c :
     * #define ECS_TYPE_HOOK_COPY 4
     * }
     */
    public static int ECS_TYPE_HOOK_COPY() {
        return ECS_TYPE_HOOK_COPY;
    }
    private static final int ECS_TYPE_HOOK_MOVE = (int)8L;
    /**
     * {@snippet lang=c :
     * #define ECS_TYPE_HOOK_MOVE 8
     * }
     */
    public static int ECS_TYPE_HOOK_MOVE() {
        return ECS_TYPE_HOOK_MOVE;
    }
    private static final int ECS_TYPE_HOOK_COPY_CTOR = (int)16L;
    /**
     * {@snippet lang=c :
     * #define ECS_TYPE_HOOK_COPY_CTOR 16
     * }
     */
    public static int ECS_TYPE_HOOK_COPY_CTOR() {
        return ECS_TYPE_HOOK_COPY_CTOR;
    }
    private static final int ECS_TYPE_HOOK_MOVE_CTOR = (int)32L;
    /**
     * {@snippet lang=c :
     * #define ECS_TYPE_HOOK_MOVE_CTOR 32
     * }
     */
    public static int ECS_TYPE_HOOK_MOVE_CTOR() {
        return ECS_TYPE_HOOK_MOVE_CTOR;
    }
    private static final int ECS_TYPE_HOOK_CTOR_MOVE_DTOR = (int)64L;
    /**
     * {@snippet lang=c :
     * #define ECS_TYPE_HOOK_CTOR_MOVE_DTOR 64
     * }
     */
    public static int ECS_TYPE_HOOK_CTOR_MOVE_DTOR() {
        return ECS_TYPE_HOOK_CTOR_MOVE_DTOR;
    }
    private static final int ECS_TYPE_HOOK_MOVE_DTOR = (int)128L;
    /**
     * {@snippet lang=c :
     * #define ECS_TYPE_HOOK_MOVE_DTOR 128
     * }
     */
    public static int ECS_TYPE_HOOK_MOVE_DTOR() {
        return ECS_TYPE_HOOK_MOVE_DTOR;
    }
    private static final int ECS_TYPE_HOOK_CTOR_ILLEGAL = (int)256L;
    /**
     * {@snippet lang=c :
     * #define ECS_TYPE_HOOK_CTOR_ILLEGAL 256
     * }
     */
    public static int ECS_TYPE_HOOK_CTOR_ILLEGAL() {
        return ECS_TYPE_HOOK_CTOR_ILLEGAL;
    }
    private static final int ECS_TYPE_HOOK_DTOR_ILLEGAL = (int)512L;
    /**
     * {@snippet lang=c :
     * #define ECS_TYPE_HOOK_DTOR_ILLEGAL 512
     * }
     */
    public static int ECS_TYPE_HOOK_DTOR_ILLEGAL() {
        return ECS_TYPE_HOOK_DTOR_ILLEGAL;
    }
    private static final int ECS_TYPE_HOOK_COPY_ILLEGAL = (int)1024L;
    /**
     * {@snippet lang=c :
     * #define ECS_TYPE_HOOK_COPY_ILLEGAL 1024
     * }
     */
    public static int ECS_TYPE_HOOK_COPY_ILLEGAL() {
        return ECS_TYPE_HOOK_COPY_ILLEGAL;
    }
    private static final int ECS_TYPE_HOOK_MOVE_ILLEGAL = (int)2048L;
    /**
     * {@snippet lang=c :
     * #define ECS_TYPE_HOOK_MOVE_ILLEGAL 2048
     * }
     */
    public static int ECS_TYPE_HOOK_MOVE_ILLEGAL() {
        return ECS_TYPE_HOOK_MOVE_ILLEGAL;
    }
    private static final int ECS_TYPE_HOOK_COPY_CTOR_ILLEGAL = (int)4096L;
    /**
     * {@snippet lang=c :
     * #define ECS_TYPE_HOOK_COPY_CTOR_ILLEGAL 4096
     * }
     */
    public static int ECS_TYPE_HOOK_COPY_CTOR_ILLEGAL() {
        return ECS_TYPE_HOOK_COPY_CTOR_ILLEGAL;
    }
    private static final int ECS_TYPE_HOOK_MOVE_CTOR_ILLEGAL = (int)8192L;
    /**
     * {@snippet lang=c :
     * #define ECS_TYPE_HOOK_MOVE_CTOR_ILLEGAL 8192
     * }
     */
    public static int ECS_TYPE_HOOK_MOVE_CTOR_ILLEGAL() {
        return ECS_TYPE_HOOK_MOVE_CTOR_ILLEGAL;
    }
    private static final int ECS_TYPE_HOOK_CTOR_MOVE_DTOR_ILLEGAL = (int)16384L;
    /**
     * {@snippet lang=c :
     * #define ECS_TYPE_HOOK_CTOR_MOVE_DTOR_ILLEGAL 16384
     * }
     */
    public static int ECS_TYPE_HOOK_CTOR_MOVE_DTOR_ILLEGAL() {
        return ECS_TYPE_HOOK_CTOR_MOVE_DTOR_ILLEGAL;
    }
    private static final int ECS_TYPE_HOOK_MOVE_DTOR_ILLEGAL = (int)32768L;
    /**
     * {@snippet lang=c :
     * #define ECS_TYPE_HOOK_MOVE_DTOR_ILLEGAL 32768
     * }
     */
    public static int ECS_TYPE_HOOK_MOVE_DTOR_ILLEGAL() {
        return ECS_TYPE_HOOK_MOVE_DTOR_ILLEGAL;
    }
    private static final int ECS_TYPE_HOOKS = (int)255L;
    /**
     * {@snippet lang=c :
     * #define ECS_TYPE_HOOKS 255
     * }
     */
    public static int ECS_TYPE_HOOKS() {
        return ECS_TYPE_HOOKS;
    }
    private static final int ECS_TYPE_HOOKS_ILLEGAL = (int)65280L;
    /**
     * {@snippet lang=c :
     * #define ECS_TYPE_HOOKS_ILLEGAL 65280
     * }
     */
    public static int ECS_TYPE_HOOKS_ILLEGAL() {
        return ECS_TYPE_HOOKS_ILLEGAL;
    }
    private static final int flecs_iter_cache_ids = (int)1L;
    /**
     * {@snippet lang=c :
     * #define flecs_iter_cache_ids 1
     * }
     */
    public static int flecs_iter_cache_ids() {
        return flecs_iter_cache_ids;
    }
    private static final int flecs_iter_cache_trs = (int)2L;
    /**
     * {@snippet lang=c :
     * #define flecs_iter_cache_trs 2
     * }
     */
    public static int flecs_iter_cache_trs() {
        return flecs_iter_cache_trs;
    }
    private static final int flecs_iter_cache_sources = (int)4L;
    /**
     * {@snippet lang=c :
     * #define flecs_iter_cache_sources 4
     * }
     */
    public static int flecs_iter_cache_sources() {
        return flecs_iter_cache_sources;
    }
    private static final int flecs_iter_cache_ptrs = (int)8L;
    /**
     * {@snippet lang=c :
     * #define flecs_iter_cache_ptrs 8
     * }
     */
    public static int flecs_iter_cache_ptrs() {
        return flecs_iter_cache_ptrs;
    }
    private static final int flecs_iter_cache_variables = (int)16L;
    /**
     * {@snippet lang=c :
     * #define flecs_iter_cache_variables 16
     * }
     */
    public static int flecs_iter_cache_variables() {
        return flecs_iter_cache_variables;
    }
    private static final int flecs_iter_cache_all = (int)255L;
    /**
     * {@snippet lang=c :
     * #define flecs_iter_cache_all 255
     * }
     */
    public static int flecs_iter_cache_all() {
        return flecs_iter_cache_all;
    }
    private static final int ECS_MAX_COMPONENT_ID = (int)268435455L;
    /**
     * {@snippet lang=c :
     * #define ECS_MAX_COMPONENT_ID 268435455
     * }
     */
    public static int ECS_MAX_COMPONENT_ID() {
        return ECS_MAX_COMPONENT_ID;
    }
    private static final int ECS_MAX_RECURSION = (int)512L;
    /**
     * {@snippet lang=c :
     * #define ECS_MAX_RECURSION 512
     * }
     */
    public static int ECS_MAX_RECURSION() {
        return ECS_MAX_RECURSION;
    }
    private static final int ECS_MAX_TOKEN_SIZE = (int)256L;
    /**
     * {@snippet lang=c :
     * #define ECS_MAX_TOKEN_SIZE 256
     * }
     */
    public static int ECS_MAX_TOKEN_SIZE() {
        return ECS_MAX_TOKEN_SIZE;
    }
    private static final int EcsQueryMatchPrefab = (int)2L;
    /**
     * {@snippet lang=c :
     * #define EcsQueryMatchPrefab 2
     * }
     */
    public static int EcsQueryMatchPrefab() {
        return EcsQueryMatchPrefab;
    }
    private static final int EcsQueryMatchDisabled = (int)4L;
    /**
     * {@snippet lang=c :
     * #define EcsQueryMatchDisabled 4
     * }
     */
    public static int EcsQueryMatchDisabled() {
        return EcsQueryMatchDisabled;
    }
    private static final int EcsQueryMatchEmptyTables = (int)8L;
    /**
     * {@snippet lang=c :
     * #define EcsQueryMatchEmptyTables 8
     * }
     */
    public static int EcsQueryMatchEmptyTables() {
        return EcsQueryMatchEmptyTables;
    }
    private static final int EcsQueryAllowUnresolvedByName = (int)64L;
    /**
     * {@snippet lang=c :
     * #define EcsQueryAllowUnresolvedByName 64
     * }
     */
    public static int EcsQueryAllowUnresolvedByName() {
        return EcsQueryAllowUnresolvedByName;
    }
    private static final int EcsQueryTableOnly = (int)128L;
    /**
     * {@snippet lang=c :
     * #define EcsQueryTableOnly 128
     * }
     */
    public static int EcsQueryTableOnly() {
        return EcsQueryTableOnly;
    }
    private static final int EcsFirstUserComponentId = (int)8L;
    /**
     * {@snippet lang=c :
     * #define EcsFirstUserComponentId 8
     * }
     */
    public static int EcsFirstUserComponentId() {
        return EcsFirstUserComponentId;
    }
    private static final int EcsFirstUserEntityId = (int)384L;
    /**
     * {@snippet lang=c :
     * #define EcsFirstUserEntityId 384
     * }
     */
    public static int EcsFirstUserEntityId() {
        return EcsFirstUserEntityId;
    }
    private static final int ECS_INVALID_OPERATION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define ECS_INVALID_OPERATION 1
     * }
     */
    public static int ECS_INVALID_OPERATION() {
        return ECS_INVALID_OPERATION;
    }
    private static final int ECS_INVALID_PARAMETER = (int)2L;
    /**
     * {@snippet lang=c :
     * #define ECS_INVALID_PARAMETER 2
     * }
     */
    public static int ECS_INVALID_PARAMETER() {
        return ECS_INVALID_PARAMETER;
    }
    private static final int ECS_CONSTRAINT_VIOLATED = (int)3L;
    /**
     * {@snippet lang=c :
     * #define ECS_CONSTRAINT_VIOLATED 3
     * }
     */
    public static int ECS_CONSTRAINT_VIOLATED() {
        return ECS_CONSTRAINT_VIOLATED;
    }
    private static final int ECS_OUT_OF_MEMORY = (int)4L;
    /**
     * {@snippet lang=c :
     * #define ECS_OUT_OF_MEMORY 4
     * }
     */
    public static int ECS_OUT_OF_MEMORY() {
        return ECS_OUT_OF_MEMORY;
    }
    private static final int ECS_OUT_OF_RANGE = (int)5L;
    /**
     * {@snippet lang=c :
     * #define ECS_OUT_OF_RANGE 5
     * }
     */
    public static int ECS_OUT_OF_RANGE() {
        return ECS_OUT_OF_RANGE;
    }
    private static final int ECS_UNSUPPORTED = (int)6L;
    /**
     * {@snippet lang=c :
     * #define ECS_UNSUPPORTED 6
     * }
     */
    public static int ECS_UNSUPPORTED() {
        return ECS_UNSUPPORTED;
    }
    private static final int ECS_INTERNAL_ERROR = (int)7L;
    /**
     * {@snippet lang=c :
     * #define ECS_INTERNAL_ERROR 7
     * }
     */
    public static int ECS_INTERNAL_ERROR() {
        return ECS_INTERNAL_ERROR;
    }
    private static final int ECS_ALREADY_DEFINED = (int)8L;
    /**
     * {@snippet lang=c :
     * #define ECS_ALREADY_DEFINED 8
     * }
     */
    public static int ECS_ALREADY_DEFINED() {
        return ECS_ALREADY_DEFINED;
    }
    private static final int ECS_MISSING_OS_API = (int)9L;
    /**
     * {@snippet lang=c :
     * #define ECS_MISSING_OS_API 9
     * }
     */
    public static int ECS_MISSING_OS_API() {
        return ECS_MISSING_OS_API;
    }
    private static final int ECS_OPERATION_FAILED = (int)10L;
    /**
     * {@snippet lang=c :
     * #define ECS_OPERATION_FAILED 10
     * }
     */
    public static int ECS_OPERATION_FAILED() {
        return ECS_OPERATION_FAILED;
    }
    private static final int ECS_INVALID_CONVERSION = (int)11L;
    /**
     * {@snippet lang=c :
     * #define ECS_INVALID_CONVERSION 11
     * }
     */
    public static int ECS_INVALID_CONVERSION() {
        return ECS_INVALID_CONVERSION;
    }
    private static final int ECS_ID_IN_USE = (int)12L;
    /**
     * {@snippet lang=c :
     * #define ECS_ID_IN_USE 12
     * }
     */
    public static int ECS_ID_IN_USE() {
        return ECS_ID_IN_USE;
    }
    private static final int ECS_CYCLE_DETECTED = (int)13L;
    /**
     * {@snippet lang=c :
     * #define ECS_CYCLE_DETECTED 13
     * }
     */
    public static int ECS_CYCLE_DETECTED() {
        return ECS_CYCLE_DETECTED;
    }
    private static final int ECS_LEAK_DETECTED = (int)14L;
    /**
     * {@snippet lang=c :
     * #define ECS_LEAK_DETECTED 14
     * }
     */
    public static int ECS_LEAK_DETECTED() {
        return ECS_LEAK_DETECTED;
    }
    private static final int ECS_DOUBLE_FREE = (int)15L;
    /**
     * {@snippet lang=c :
     * #define ECS_DOUBLE_FREE 15
     * }
     */
    public static int ECS_DOUBLE_FREE() {
        return ECS_DOUBLE_FREE;
    }
    private static final int ECS_INCONSISTENT_NAME = (int)20L;
    /**
     * {@snippet lang=c :
     * #define ECS_INCONSISTENT_NAME 20
     * }
     */
    public static int ECS_INCONSISTENT_NAME() {
        return ECS_INCONSISTENT_NAME;
    }
    private static final int ECS_NAME_IN_USE = (int)21L;
    /**
     * {@snippet lang=c :
     * #define ECS_NAME_IN_USE 21
     * }
     */
    public static int ECS_NAME_IN_USE() {
        return ECS_NAME_IN_USE;
    }
    private static final int ECS_NOT_A_COMPONENT = (int)22L;
    /**
     * {@snippet lang=c :
     * #define ECS_NOT_A_COMPONENT 22
     * }
     */
    public static int ECS_NOT_A_COMPONENT() {
        return ECS_NOT_A_COMPONENT;
    }
    private static final int ECS_INVALID_COMPONENT_SIZE = (int)23L;
    /**
     * {@snippet lang=c :
     * #define ECS_INVALID_COMPONENT_SIZE 23
     * }
     */
    public static int ECS_INVALID_COMPONENT_SIZE() {
        return ECS_INVALID_COMPONENT_SIZE;
    }
    private static final int ECS_INVALID_COMPONENT_ALIGNMENT = (int)24L;
    /**
     * {@snippet lang=c :
     * #define ECS_INVALID_COMPONENT_ALIGNMENT 24
     * }
     */
    public static int ECS_INVALID_COMPONENT_ALIGNMENT() {
        return ECS_INVALID_COMPONENT_ALIGNMENT;
    }
    private static final int ECS_COMPONENT_NOT_REGISTERED = (int)25L;
    /**
     * {@snippet lang=c :
     * #define ECS_COMPONENT_NOT_REGISTERED 25
     * }
     */
    public static int ECS_COMPONENT_NOT_REGISTERED() {
        return ECS_COMPONENT_NOT_REGISTERED;
    }
    private static final int ECS_INCONSISTENT_COMPONENT_ID = (int)26L;
    /**
     * {@snippet lang=c :
     * #define ECS_INCONSISTENT_COMPONENT_ID 26
     * }
     */
    public static int ECS_INCONSISTENT_COMPONENT_ID() {
        return ECS_INCONSISTENT_COMPONENT_ID;
    }
    private static final int ECS_INCONSISTENT_COMPONENT_ACTION = (int)27L;
    /**
     * {@snippet lang=c :
     * #define ECS_INCONSISTENT_COMPONENT_ACTION 27
     * }
     */
    public static int ECS_INCONSISTENT_COMPONENT_ACTION() {
        return ECS_INCONSISTENT_COMPONENT_ACTION;
    }
    private static final int ECS_MODULE_UNDEFINED = (int)28L;
    /**
     * {@snippet lang=c :
     * #define ECS_MODULE_UNDEFINED 28
     * }
     */
    public static int ECS_MODULE_UNDEFINED() {
        return ECS_MODULE_UNDEFINED;
    }
    private static final int ECS_MISSING_SYMBOL = (int)29L;
    /**
     * {@snippet lang=c :
     * #define ECS_MISSING_SYMBOL 29
     * }
     */
    public static int ECS_MISSING_SYMBOL() {
        return ECS_MISSING_SYMBOL;
    }
    private static final int ECS_ALREADY_IN_USE = (int)30L;
    /**
     * {@snippet lang=c :
     * #define ECS_ALREADY_IN_USE 30
     * }
     */
    public static int ECS_ALREADY_IN_USE() {
        return ECS_ALREADY_IN_USE;
    }
    private static final int ECS_ACCESS_VIOLATION = (int)40L;
    /**
     * {@snippet lang=c :
     * #define ECS_ACCESS_VIOLATION 40
     * }
     */
    public static int ECS_ACCESS_VIOLATION() {
        return ECS_ACCESS_VIOLATION;
    }
    private static final int ECS_COLUMN_INDEX_OUT_OF_RANGE = (int)41L;
    /**
     * {@snippet lang=c :
     * #define ECS_COLUMN_INDEX_OUT_OF_RANGE 41
     * }
     */
    public static int ECS_COLUMN_INDEX_OUT_OF_RANGE() {
        return ECS_COLUMN_INDEX_OUT_OF_RANGE;
    }
    private static final int ECS_COLUMN_IS_NOT_SHARED = (int)42L;
    /**
     * {@snippet lang=c :
     * #define ECS_COLUMN_IS_NOT_SHARED 42
     * }
     */
    public static int ECS_COLUMN_IS_NOT_SHARED() {
        return ECS_COLUMN_IS_NOT_SHARED;
    }
    private static final int ECS_COLUMN_IS_SHARED = (int)43L;
    /**
     * {@snippet lang=c :
     * #define ECS_COLUMN_IS_SHARED 43
     * }
     */
    public static int ECS_COLUMN_IS_SHARED() {
        return ECS_COLUMN_IS_SHARED;
    }
    private static final int ECS_COLUMN_TYPE_MISMATCH = (int)45L;
    /**
     * {@snippet lang=c :
     * #define ECS_COLUMN_TYPE_MISMATCH 45
     * }
     */
    public static int ECS_COLUMN_TYPE_MISMATCH() {
        return ECS_COLUMN_TYPE_MISMATCH;
    }
    private static final int ECS_INVALID_WHILE_READONLY = (int)70L;
    /**
     * {@snippet lang=c :
     * #define ECS_INVALID_WHILE_READONLY 70
     * }
     */
    public static int ECS_INVALID_WHILE_READONLY() {
        return ECS_INVALID_WHILE_READONLY;
    }
    private static final int ECS_LOCKED_STORAGE = (int)71L;
    /**
     * {@snippet lang=c :
     * #define ECS_LOCKED_STORAGE 71
     * }
     */
    public static int ECS_LOCKED_STORAGE() {
        return ECS_LOCKED_STORAGE;
    }
    private static final int ECS_INVALID_FROM_WORKER = (int)72L;
    /**
     * {@snippet lang=c :
     * #define ECS_INVALID_FROM_WORKER 72
     * }
     */
    public static int ECS_INVALID_FROM_WORKER() {
        return ECS_INVALID_FROM_WORKER;
    }
    /**
     * {@snippet lang=c :
     * #define ECS_BLACK "[1;30m"
     * }
     */
    public static MemorySegment ECS_BLACK() {
        class Holder {
            static final MemorySegment ECS_BLACK
                = flecs.LIBRARY_ARENA.allocateFrom("\u001b[1;30m");
        }
        return Holder.ECS_BLACK;
    }
    /**
     * {@snippet lang=c :
     * #define ECS_RED "[0;31m"
     * }
     */
    public static MemorySegment ECS_RED() {
        class Holder {
            static final MemorySegment ECS_RED
                = flecs.LIBRARY_ARENA.allocateFrom("\u001b[0;31m");
        }
        return Holder.ECS_RED;
    }
    /**
     * {@snippet lang=c :
     * #define ECS_GREEN "[0;32m"
     * }
     */
    public static MemorySegment ECS_GREEN() {
        class Holder {
            static final MemorySegment ECS_GREEN
                = flecs.LIBRARY_ARENA.allocateFrom("\u001b[0;32m");
        }
        return Holder.ECS_GREEN;
    }
    /**
     * {@snippet lang=c :
     * #define ECS_YELLOW "[0;33m"
     * }
     */
    public static MemorySegment ECS_YELLOW() {
        class Holder {
            static final MemorySegment ECS_YELLOW
                = flecs.LIBRARY_ARENA.allocateFrom("\u001b[0;33m");
        }
        return Holder.ECS_YELLOW;
    }
    /**
     * {@snippet lang=c :
     * #define ECS_BLUE "[0;34m"
     * }
     */
    public static MemorySegment ECS_BLUE() {
        class Holder {
            static final MemorySegment ECS_BLUE
                = flecs.LIBRARY_ARENA.allocateFrom("\u001b[0;34m");
        }
        return Holder.ECS_BLUE;
    }
    /**
     * {@snippet lang=c :
     * #define ECS_MAGENTA "[0;35m"
     * }
     */
    public static MemorySegment ECS_MAGENTA() {
        class Holder {
            static final MemorySegment ECS_MAGENTA
                = flecs.LIBRARY_ARENA.allocateFrom("\u001b[0;35m");
        }
        return Holder.ECS_MAGENTA;
    }
    /**
     * {@snippet lang=c :
     * #define ECS_CYAN "[0;36m"
     * }
     */
    public static MemorySegment ECS_CYAN() {
        class Holder {
            static final MemorySegment ECS_CYAN
                = flecs.LIBRARY_ARENA.allocateFrom("\u001b[0;36m");
        }
        return Holder.ECS_CYAN;
    }
    /**
     * {@snippet lang=c :
     * #define ECS_WHITE "[1;37m"
     * }
     */
    public static MemorySegment ECS_WHITE() {
        class Holder {
            static final MemorySegment ECS_WHITE
                = flecs.LIBRARY_ARENA.allocateFrom("\u001b[1;37m");
        }
        return Holder.ECS_WHITE;
    }
    /**
     * {@snippet lang=c :
     * #define ECS_GREY "[0;37m"
     * }
     */
    public static MemorySegment ECS_GREY() {
        class Holder {
            static final MemorySegment ECS_GREY
                = flecs.LIBRARY_ARENA.allocateFrom("\u001b[0;37m");
        }
        return Holder.ECS_GREY;
    }
    /**
     * {@snippet lang=c :
     * #define ECS_NORMAL "[0;49m"
     * }
     */
    public static MemorySegment ECS_NORMAL() {
        class Holder {
            static final MemorySegment ECS_NORMAL
                = flecs.LIBRARY_ARENA.allocateFrom("\u001b[0;49m");
        }
        return Holder.ECS_NORMAL;
    }
    /**
     * {@snippet lang=c :
     * #define ECS_BOLD "[1;49m"
     * }
     */
    public static MemorySegment ECS_BOLD() {
        class Holder {
            static final MemorySegment ECS_BOLD
                = flecs.LIBRARY_ARENA.allocateFrom("\u001b[1;49m");
        }
        return Holder.ECS_BOLD;
    }
    private static final int ECS_HTTP_HEADER_COUNT_MAX = (int)32L;
    /**
     * {@snippet lang=c :
     * #define ECS_HTTP_HEADER_COUNT_MAX 32
     * }
     */
    public static int ECS_HTTP_HEADER_COUNT_MAX() {
        return ECS_HTTP_HEADER_COUNT_MAX;
    }
    private static final int ECS_HTTP_QUERY_PARAM_COUNT_MAX = (int)32L;
    /**
     * {@snippet lang=c :
     * #define ECS_HTTP_QUERY_PARAM_COUNT_MAX 32
     * }
     */
    public static int ECS_HTTP_QUERY_PARAM_COUNT_MAX() {
        return ECS_HTTP_QUERY_PARAM_COUNT_MAX;
    }
    private static final int ECS_REST_DEFAULT_PORT = (int)27750L;
    /**
     * {@snippet lang=c :
     * #define ECS_REST_DEFAULT_PORT 27750
     * }
     */
    public static int ECS_REST_DEFAULT_PORT() {
        return ECS_REST_DEFAULT_PORT;
    }
    private static final int ECS_STAT_WINDOW = (int)60L;
    /**
     * {@snippet lang=c :
     * #define ECS_STAT_WINDOW 60
     * }
     */
    public static int ECS_STAT_WINDOW() {
        return ECS_STAT_WINDOW;
    }
    private static final int ECS_ALERT_MAX_SEVERITY_FILTERS = (int)4L;
    /**
     * {@snippet lang=c :
     * #define ECS_ALERT_MAX_SEVERITY_FILTERS 4
     * }
     */
    public static int ECS_ALERT_MAX_SEVERITY_FILTERS() {
        return ECS_ALERT_MAX_SEVERITY_FILTERS;
    }
    private static final int FLECS_SCRIPT_FUNCTION_ARGS_MAX = (int)16L;
    /**
     * {@snippet lang=c :
     * #define FLECS_SCRIPT_FUNCTION_ARGS_MAX 16
     * }
     */
    public static int FLECS_SCRIPT_FUNCTION_ARGS_MAX() {
        return FLECS_SCRIPT_FUNCTION_ARGS_MAX;
    }
    private static final int ECS_MEMBER_DESC_CACHE_SIZE = (int)32L;
    /**
     * {@snippet lang=c :
     * #define ECS_MEMBER_DESC_CACHE_SIZE 32
     * }
     */
    public static int ECS_MEMBER_DESC_CACHE_SIZE() {
        return ECS_MEMBER_DESC_CACHE_SIZE;
    }
    private static final int ECS_META_MAX_SCOPE_DEPTH = (int)32L;
    /**
     * {@snippet lang=c :
     * #define ECS_META_MAX_SCOPE_DEPTH 32
     * }
     */
    public static int ECS_META_MAX_SCOPE_DEPTH() {
        return ECS_META_MAX_SCOPE_DEPTH;
    }
    private static final float PI = 3.1415927410125732f;
    /**
     * {@snippet lang=c :
     * #define PI 3.1415927410125732
     * }
     */
    public static float PI() {
        return PI;
    }
    private static final float EPSILON = 9.999999974752427E-7f;
    /**
     * {@snippet lang=c :
     * #define EPSILON 9.999999974752427E-7
     * }
     */
    public static float EPSILON() {
        return EPSILON;
    }
    private static final float DEG2RAD = 0.01745329238474369f;
    /**
     * {@snippet lang=c :
     * #define DEG2RAD 0.01745329238474369
     * }
     */
    public static float DEG2RAD() {
        return DEG2RAD;
    }
    private static final float RAD2DEG = 57.2957763671875f;
    /**
     * {@snippet lang=c :
     * #define RAD2DEG 57.2957763671875
     * }
     */
    public static float RAD2DEG() {
        return RAD2DEG;
    }
    private static final double HUGE_VAL = Double.valueOf("Infinity");
    /**
     * {@snippet lang=c :
     * #define HUGE_VAL Infinity
     * }
     */
    public static double HUGE_VAL() {
        return HUGE_VAL;
    }
    private static final float HUGE_VALF = Float.valueOf("Infinity");
    /**
     * {@snippet lang=c :
     * #define HUGE_VALF Infinity
     * }
     */
    public static float HUGE_VALF() {
        return HUGE_VALF;
    }
    private static final float NAN = Float.valueOf("NaN");
    /**
     * {@snippet lang=c :
     * #define NAN NaN
     * }
     */
    public static float NAN() {
        return NAN;
    }
    private static final float INFINITY = Float.valueOf("Infinity");
    /**
     * {@snippet lang=c :
     * #define INFINITY Infinity
     * }
     */
    public static float INFINITY() {
        return INFINITY;
    }
    private static final int FP_ILOGB0 = (int)-2147483648L;
    /**
     * {@snippet lang=c :
     * #define FP_ILOGB0 -2147483648
     * }
     */
    public static int FP_ILOGB0() {
        return FP_ILOGB0;
    }
    private static final int FP_ILOGBNAN = (int)-2147483648L;
    /**
     * {@snippet lang=c :
     * #define FP_ILOGBNAN -2147483648
     * }
     */
    public static int FP_ILOGBNAN() {
        return FP_ILOGBNAN;
    }
    private static final double M_E = 2.718281828459045d;
    /**
     * {@snippet lang=c :
     * #define M_E 2.718281828459045
     * }
     */
    public static double M_E() {
        return M_E;
    }
    private static final double M_LOG2E = 1.4426950408889634d;
    /**
     * {@snippet lang=c :
     * #define M_LOG2E 1.4426950408889634
     * }
     */
    public static double M_LOG2E() {
        return M_LOG2E;
    }
    private static final double M_LOG10E = 0.4342944819032518d;
    /**
     * {@snippet lang=c :
     * #define M_LOG10E 0.4342944819032518
     * }
     */
    public static double M_LOG10E() {
        return M_LOG10E;
    }
    private static final double M_LN2 = 0.6931471805599453d;
    /**
     * {@snippet lang=c :
     * #define M_LN2 0.6931471805599453
     * }
     */
    public static double M_LN2() {
        return M_LN2;
    }
    private static final double M_LN10 = 2.302585092994046d;
    /**
     * {@snippet lang=c :
     * #define M_LN10 2.302585092994046
     * }
     */
    public static double M_LN10() {
        return M_LN10;
    }
    private static final double M_PI = 3.141592653589793d;
    /**
     * {@snippet lang=c :
     * #define M_PI 3.141592653589793
     * }
     */
    public static double M_PI() {
        return M_PI;
    }
    private static final double M_PI_2 = 1.5707963267948966d;
    /**
     * {@snippet lang=c :
     * #define M_PI_2 1.5707963267948966
     * }
     */
    public static double M_PI_2() {
        return M_PI_2;
    }
    private static final double M_PI_4 = 0.7853981633974483d;
    /**
     * {@snippet lang=c :
     * #define M_PI_4 0.7853981633974483
     * }
     */
    public static double M_PI_4() {
        return M_PI_4;
    }
    private static final double M_1_PI = 0.3183098861837907d;
    /**
     * {@snippet lang=c :
     * #define M_1_PI 0.3183098861837907
     * }
     */
    public static double M_1_PI() {
        return M_1_PI;
    }
    private static final double M_2_PI = 0.6366197723675814d;
    /**
     * {@snippet lang=c :
     * #define M_2_PI 0.6366197723675814
     * }
     */
    public static double M_2_PI() {
        return M_2_PI;
    }
    private static final double M_2_SQRTPI = 1.1283791670955126d;
    /**
     * {@snippet lang=c :
     * #define M_2_SQRTPI 1.1283791670955126
     * }
     */
    public static double M_2_SQRTPI() {
        return M_2_SQRTPI;
    }
    private static final double M_SQRT2 = 1.4142135623730951d;
    /**
     * {@snippet lang=c :
     * #define M_SQRT2 1.4142135623730951
     * }
     */
    public static double M_SQRT2() {
        return M_SQRT2;
    }
    private static final double M_SQRT1_2 = 0.7071067811865476d;
    /**
     * {@snippet lang=c :
     * #define M_SQRT1_2 0.7071067811865476
     * }
     */
    public static double M_SQRT1_2() {
        return M_SQRT1_2;
    }
    private static final float MAXFLOAT = 3.4028234663852886E38f;
    /**
     * {@snippet lang=c :
     * #define MAXFLOAT 3.4028234663852886E38
     * }
     */
    public static float MAXFLOAT() {
        return MAXFLOAT;
    }
    private static final int FP_SNAN = (int)1L;
    /**
     * {@snippet lang=c :
     * #define FP_SNAN 1
     * }
     */
    public static int FP_SNAN() {
        return FP_SNAN;
    }
    private static final int FP_QNAN = (int)1L;
    /**
     * {@snippet lang=c :
     * #define FP_QNAN 1
     * }
     */
    public static int FP_QNAN() {
        return FP_QNAN;
    }
    private static final float HUGE = 3.4028234663852886E38f;
    /**
     * {@snippet lang=c :
     * #define HUGE 3.4028234663852886E38
     * }
     */
    public static float HUGE() {
        return HUGE;
    }
    private static final double X_TLOSS = 1.414847550405688E16d;
    /**
     * {@snippet lang=c :
     * #define X_TLOSS 1.414847550405688E16
     * }
     */
    public static double X_TLOSS() {
        return X_TLOSS;
    }
}

