// Generated by jextract

package org.vybe.flecs;

import java.lang.invoke.*;
import java.lang.foreign.*;
import java.nio.ByteOrder;
import java.util.*;
import java.util.function.*;
import java.util.stream.*;

import static java.lang.foreign.ValueLayout.*;
import static java.lang.foreign.MemoryLayout.PathElement.*;

/**
 * {@snippet lang=c :
 * struct Matrix {
 *     float m0;
 *     float m4;
 *     float m8;
 *     float m12;
 *     float m1;
 *     float m5;
 *     float m9;
 *     float m13;
 *     float m2;
 *     float m6;
 *     float m10;
 *     float m14;
 *     float m3;
 *     float m7;
 *     float m11;
 *     float m15;
 * }
 * }
 */
public class Matrix {

    Matrix() {
        // Should not be called directly
    }

    private static final GroupLayout $LAYOUT = MemoryLayout.structLayout(
        flecs.C_FLOAT.withName("m0"),
        flecs.C_FLOAT.withName("m4"),
        flecs.C_FLOAT.withName("m8"),
        flecs.C_FLOAT.withName("m12"),
        flecs.C_FLOAT.withName("m1"),
        flecs.C_FLOAT.withName("m5"),
        flecs.C_FLOAT.withName("m9"),
        flecs.C_FLOAT.withName("m13"),
        flecs.C_FLOAT.withName("m2"),
        flecs.C_FLOAT.withName("m6"),
        flecs.C_FLOAT.withName("m10"),
        flecs.C_FLOAT.withName("m14"),
        flecs.C_FLOAT.withName("m3"),
        flecs.C_FLOAT.withName("m7"),
        flecs.C_FLOAT.withName("m11"),
        flecs.C_FLOAT.withName("m15")
    ).withName("Matrix");

    /**
     * The layout of this struct
     */
    public static final GroupLayout layout() {
        return $LAYOUT;
    }

    private static final OfFloat m0$LAYOUT = (OfFloat)$LAYOUT.select(groupElement("m0"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * float m0
     * }
     */
    public static final OfFloat m0$layout() {
        return m0$LAYOUT;
    }

    private static final long m0$OFFSET = 0;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * float m0
     * }
     */
    public static final long m0$offset() {
        return m0$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * float m0
     * }
     */
    public static float m0(MemorySegment struct) {
        return struct.get(m0$LAYOUT, m0$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * float m0
     * }
     */
    public static void m0(MemorySegment struct, float fieldValue) {
        struct.set(m0$LAYOUT, m0$OFFSET, fieldValue);
    }

    private static final OfFloat m4$LAYOUT = (OfFloat)$LAYOUT.select(groupElement("m4"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * float m4
     * }
     */
    public static final OfFloat m4$layout() {
        return m4$LAYOUT;
    }

    private static final long m4$OFFSET = 4;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * float m4
     * }
     */
    public static final long m4$offset() {
        return m4$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * float m4
     * }
     */
    public static float m4(MemorySegment struct) {
        return struct.get(m4$LAYOUT, m4$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * float m4
     * }
     */
    public static void m4(MemorySegment struct, float fieldValue) {
        struct.set(m4$LAYOUT, m4$OFFSET, fieldValue);
    }

    private static final OfFloat m8$LAYOUT = (OfFloat)$LAYOUT.select(groupElement("m8"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * float m8
     * }
     */
    public static final OfFloat m8$layout() {
        return m8$LAYOUT;
    }

    private static final long m8$OFFSET = 8;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * float m8
     * }
     */
    public static final long m8$offset() {
        return m8$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * float m8
     * }
     */
    public static float m8(MemorySegment struct) {
        return struct.get(m8$LAYOUT, m8$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * float m8
     * }
     */
    public static void m8(MemorySegment struct, float fieldValue) {
        struct.set(m8$LAYOUT, m8$OFFSET, fieldValue);
    }

    private static final OfFloat m12$LAYOUT = (OfFloat)$LAYOUT.select(groupElement("m12"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * float m12
     * }
     */
    public static final OfFloat m12$layout() {
        return m12$LAYOUT;
    }

    private static final long m12$OFFSET = 12;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * float m12
     * }
     */
    public static final long m12$offset() {
        return m12$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * float m12
     * }
     */
    public static float m12(MemorySegment struct) {
        return struct.get(m12$LAYOUT, m12$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * float m12
     * }
     */
    public static void m12(MemorySegment struct, float fieldValue) {
        struct.set(m12$LAYOUT, m12$OFFSET, fieldValue);
    }

    private static final OfFloat m1$LAYOUT = (OfFloat)$LAYOUT.select(groupElement("m1"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * float m1
     * }
     */
    public static final OfFloat m1$layout() {
        return m1$LAYOUT;
    }

    private static final long m1$OFFSET = 16;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * float m1
     * }
     */
    public static final long m1$offset() {
        return m1$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * float m1
     * }
     */
    public static float m1(MemorySegment struct) {
        return struct.get(m1$LAYOUT, m1$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * float m1
     * }
     */
    public static void m1(MemorySegment struct, float fieldValue) {
        struct.set(m1$LAYOUT, m1$OFFSET, fieldValue);
    }

    private static final OfFloat m5$LAYOUT = (OfFloat)$LAYOUT.select(groupElement("m5"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * float m5
     * }
     */
    public static final OfFloat m5$layout() {
        return m5$LAYOUT;
    }

    private static final long m5$OFFSET = 20;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * float m5
     * }
     */
    public static final long m5$offset() {
        return m5$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * float m5
     * }
     */
    public static float m5(MemorySegment struct) {
        return struct.get(m5$LAYOUT, m5$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * float m5
     * }
     */
    public static void m5(MemorySegment struct, float fieldValue) {
        struct.set(m5$LAYOUT, m5$OFFSET, fieldValue);
    }

    private static final OfFloat m9$LAYOUT = (OfFloat)$LAYOUT.select(groupElement("m9"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * float m9
     * }
     */
    public static final OfFloat m9$layout() {
        return m9$LAYOUT;
    }

    private static final long m9$OFFSET = 24;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * float m9
     * }
     */
    public static final long m9$offset() {
        return m9$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * float m9
     * }
     */
    public static float m9(MemorySegment struct) {
        return struct.get(m9$LAYOUT, m9$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * float m9
     * }
     */
    public static void m9(MemorySegment struct, float fieldValue) {
        struct.set(m9$LAYOUT, m9$OFFSET, fieldValue);
    }

    private static final OfFloat m13$LAYOUT = (OfFloat)$LAYOUT.select(groupElement("m13"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * float m13
     * }
     */
    public static final OfFloat m13$layout() {
        return m13$LAYOUT;
    }

    private static final long m13$OFFSET = 28;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * float m13
     * }
     */
    public static final long m13$offset() {
        return m13$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * float m13
     * }
     */
    public static float m13(MemorySegment struct) {
        return struct.get(m13$LAYOUT, m13$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * float m13
     * }
     */
    public static void m13(MemorySegment struct, float fieldValue) {
        struct.set(m13$LAYOUT, m13$OFFSET, fieldValue);
    }

    private static final OfFloat m2$LAYOUT = (OfFloat)$LAYOUT.select(groupElement("m2"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * float m2
     * }
     */
    public static final OfFloat m2$layout() {
        return m2$LAYOUT;
    }

    private static final long m2$OFFSET = 32;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * float m2
     * }
     */
    public static final long m2$offset() {
        return m2$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * float m2
     * }
     */
    public static float m2(MemorySegment struct) {
        return struct.get(m2$LAYOUT, m2$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * float m2
     * }
     */
    public static void m2(MemorySegment struct, float fieldValue) {
        struct.set(m2$LAYOUT, m2$OFFSET, fieldValue);
    }

    private static final OfFloat m6$LAYOUT = (OfFloat)$LAYOUT.select(groupElement("m6"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * float m6
     * }
     */
    public static final OfFloat m6$layout() {
        return m6$LAYOUT;
    }

    private static final long m6$OFFSET = 36;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * float m6
     * }
     */
    public static final long m6$offset() {
        return m6$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * float m6
     * }
     */
    public static float m6(MemorySegment struct) {
        return struct.get(m6$LAYOUT, m6$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * float m6
     * }
     */
    public static void m6(MemorySegment struct, float fieldValue) {
        struct.set(m6$LAYOUT, m6$OFFSET, fieldValue);
    }

    private static final OfFloat m10$LAYOUT = (OfFloat)$LAYOUT.select(groupElement("m10"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * float m10
     * }
     */
    public static final OfFloat m10$layout() {
        return m10$LAYOUT;
    }

    private static final long m10$OFFSET = 40;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * float m10
     * }
     */
    public static final long m10$offset() {
        return m10$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * float m10
     * }
     */
    public static float m10(MemorySegment struct) {
        return struct.get(m10$LAYOUT, m10$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * float m10
     * }
     */
    public static void m10(MemorySegment struct, float fieldValue) {
        struct.set(m10$LAYOUT, m10$OFFSET, fieldValue);
    }

    private static final OfFloat m14$LAYOUT = (OfFloat)$LAYOUT.select(groupElement("m14"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * float m14
     * }
     */
    public static final OfFloat m14$layout() {
        return m14$LAYOUT;
    }

    private static final long m14$OFFSET = 44;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * float m14
     * }
     */
    public static final long m14$offset() {
        return m14$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * float m14
     * }
     */
    public static float m14(MemorySegment struct) {
        return struct.get(m14$LAYOUT, m14$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * float m14
     * }
     */
    public static void m14(MemorySegment struct, float fieldValue) {
        struct.set(m14$LAYOUT, m14$OFFSET, fieldValue);
    }

    private static final OfFloat m3$LAYOUT = (OfFloat)$LAYOUT.select(groupElement("m3"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * float m3
     * }
     */
    public static final OfFloat m3$layout() {
        return m3$LAYOUT;
    }

    private static final long m3$OFFSET = 48;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * float m3
     * }
     */
    public static final long m3$offset() {
        return m3$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * float m3
     * }
     */
    public static float m3(MemorySegment struct) {
        return struct.get(m3$LAYOUT, m3$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * float m3
     * }
     */
    public static void m3(MemorySegment struct, float fieldValue) {
        struct.set(m3$LAYOUT, m3$OFFSET, fieldValue);
    }

    private static final OfFloat m7$LAYOUT = (OfFloat)$LAYOUT.select(groupElement("m7"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * float m7
     * }
     */
    public static final OfFloat m7$layout() {
        return m7$LAYOUT;
    }

    private static final long m7$OFFSET = 52;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * float m7
     * }
     */
    public static final long m7$offset() {
        return m7$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * float m7
     * }
     */
    public static float m7(MemorySegment struct) {
        return struct.get(m7$LAYOUT, m7$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * float m7
     * }
     */
    public static void m7(MemorySegment struct, float fieldValue) {
        struct.set(m7$LAYOUT, m7$OFFSET, fieldValue);
    }

    private static final OfFloat m11$LAYOUT = (OfFloat)$LAYOUT.select(groupElement("m11"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * float m11
     * }
     */
    public static final OfFloat m11$layout() {
        return m11$LAYOUT;
    }

    private static final long m11$OFFSET = 56;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * float m11
     * }
     */
    public static final long m11$offset() {
        return m11$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * float m11
     * }
     */
    public static float m11(MemorySegment struct) {
        return struct.get(m11$LAYOUT, m11$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * float m11
     * }
     */
    public static void m11(MemorySegment struct, float fieldValue) {
        struct.set(m11$LAYOUT, m11$OFFSET, fieldValue);
    }

    private static final OfFloat m15$LAYOUT = (OfFloat)$LAYOUT.select(groupElement("m15"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * float m15
     * }
     */
    public static final OfFloat m15$layout() {
        return m15$LAYOUT;
    }

    private static final long m15$OFFSET = 60;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * float m15
     * }
     */
    public static final long m15$offset() {
        return m15$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * float m15
     * }
     */
    public static float m15(MemorySegment struct) {
        return struct.get(m15$LAYOUT, m15$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * float m15
     * }
     */
    public static void m15(MemorySegment struct, float fieldValue) {
        struct.set(m15$LAYOUT, m15$OFFSET, fieldValue);
    }

    /**
     * Obtains a slice of {@code arrayParam} which selects the array element at {@code index}.
     * The returned segment has address {@code arrayParam.address() + index * layout().byteSize()}
     */
    public static MemorySegment asSlice(MemorySegment array, long index) {
        return array.asSlice(layout().byteSize() * index);
    }

    /**
     * The size (in bytes) of this struct
     */
    public static long sizeof() { return layout().byteSize(); }

    /**
     * Allocate a segment of size {@code layout().byteSize()} using {@code allocator}
     */
    public static MemorySegment allocate(SegmentAllocator allocator) {
        return allocator.allocate(layout());
    }

    /**
     * Allocate an array of size {@code elementCount} using {@code allocator}.
     * The returned segment has size {@code elementCount * layout().byteSize()}.
     */
    public static MemorySegment allocateArray(long elementCount, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(elementCount, layout()));
    }

    /**
     * Reinterprets {@code addr} using target {@code arena} and {@code cleanupAction} (if any).
     * The returned segment has size {@code layout().byteSize()}
     */
    public static MemorySegment reinterpret(MemorySegment addr, Arena arena, Consumer<MemorySegment> cleanup) {
        return reinterpret(addr, 1, arena, cleanup);
    }

    /**
     * Reinterprets {@code addr} using target {@code arena} and {@code cleanupAction} (if any).
     * The returned segment has size {@code elementCount * layout().byteSize()}
     */
    public static MemorySegment reinterpret(MemorySegment addr, long elementCount, Arena arena, Consumer<MemorySegment> cleanup) {
        return addr.reinterpret(layout().byteSize() * elementCount, arena, cleanup);
    }
}

