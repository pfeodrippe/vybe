{:deps {potemkin/potemkin {:mvn/version "0.4.7"}
        metosin/malli {:mvn/version "0.11.0"}
        meta-merge/meta-merge {:mvn/version "1.0.0"}
        metosin/jsonista {:mvn/version "0.3.7"}
        camel-snake-kebab/camel-snake-kebab {:mvn/version "0.4.3"}
        lambdaisland/deep-diff2 {:mvn/version "2.11.216"}

        ;; File watcher.
        com.nextjournal/beholder {:mvn/version "1.0.2"}

        ;; NREPL
        nrepl/nrepl {:mvn/version "1.1.1"}
        cider/cider-nrepl {:mvn/version "0.49.3"}
        ;; This version does not work fine for some reason!
        #_ #_cider/cider-nrepl {:mvn/version "0.50.2"}

        ;; Sound.
        overtone/overtone {:mvn/version "0.14.3199"}

        ;; Networking.
        aleph/aleph {:mvn/version "0.8.1"}

        ;; Viz.
        io.github.nextjournal/clerk {:mvn/version "0.16.1016"}

        ;; For unzipping.
        io.github.clojure/tools.build {:mvn/version "0.10.5"}}

 :aliases
 { ;; Run with clj -T:build function-in-build
  :build {:deps {io.github.clojure/tools.build {:mvn/version "0.10.5"}}
          :ns-default build}

  :test {:jvm-opts ["--enable-native-access=ALL-UNNAMED"
                    #_"-Djextract.trace.downcalls=true"]
         :extra-paths ["test" "test-resources"]
         :extra-deps {lambdaisland/kaocha {:mvn/version "1.91.1392"}
                      nubank/matcher-combinators {:mvn/version "3.9.1"}}
         :main-opts ["-m" "kaocha.runner"]}

  :dev {:jvm-opts ["--enable-native-access=ALL-UNNAMED"
                   #_ "-Djdk.attach.allowAttachSelf"
                   #_ "-XX:+UnlockDiagnosticVMOptions"
                   #_"-XX:+DebugNonSafepoints"
                   "-XX:+CreateCoredumpOnCrash"
                   #_"-Djava.library.path=./resources"

                   #_"-XX:ReservedCodeCacheSize=1024m"

                   ;; For tracing panama calls.
                   #_"-Djextract.trace.downcalls=true"]

        :extra-paths ["test" "test-resources"]
        :extra-deps {djblue/portal {:mvn/version "0.48.0"}
                     com.clojure-goes-fast/clj-java-decompiler {:mvn/version "0.3.4"}
                     nubank/matcher-combinators {:mvn/version "3.9.1"}}}

  :win {:jvm-opts ["-Djava.library.path=vybe_native"
                   "-XX:+CreateCoredumpOnCrash"

                   ;; For tracing panama calls.
                   #_"-Djextract.trace.downcalls=true"]
        :extra-paths ["test" "test-resources"]
        :extra-deps {djblue/portal {:mvn/version "0.48.0"}
                     com.clojure-goes-fast/clj-java-decompiler {:mvn/version "0.3.4"}
                     nubank/matcher-combinators {:mvn/version "3.9.1"}}}

  :osx {:jvm-opts ["-Djava.library.path=vybe_native"
                   "--enable-native-access=ALL-UNNAMED"
                   "-XX:+CreateCoredumpOnCrash"

                   "-XstartOnFirstThread"

                   ;; For tracing panama calls.
                   #_"-Djextract.trace.downcalls=true"]

        :extra-paths ["test" "test-resources"]
        :extra-deps {djblue/portal {:mvn/version "0.48.0"}
                     com.clojure-goes-fast/clj-java-decompiler {:mvn/version "0.3.4"}
                     nubank/matcher-combinators {:mvn/version "3.9.1"}}}

  :linux {:jvm-opts ["-Djava.library.path=vybe_native"
                     "--enable-native-access=ALL-UNNAMED"
                     "-XX:+CreateCoredumpOnCrash"

                     ;; For tracing panama calls.
                     #_"-Djextract.trace.downcalls=true"]

          :extra-paths ["test" "test-resources"]
          :extra-deps {djblue/portal {:mvn/version "0.48.0"}
                       com.clojure-goes-fast/clj-java-decompiler {:mvn/version "0.3.4"}
                       nubank/matcher-combinators {:mvn/version "3.9.1"}}}}

 :paths ["src" "resources" "vybe_native" "target/classes"]}
