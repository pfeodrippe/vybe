name: CI

on: [ push, pull_request ]

jobs:
  build-windows:
    runs-on: windows-latest
    timeout-minutes: 30
    strategy:
      fail-fast: true

    steps:
      - uses: actions/checkout@v4
      - uses: ilammy/msvc-dev-cmd@v1
      - name: Populate submodules
        run: |
          git submodule update --init --recursive

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v2
      - name: Configure CMake
        run: cmake -B ${{github.workspace}}/JoltPhysics/Build/VS2022_CL -G "Visual Studio 17 2022" -A x64 JoltPhysics/Build
      - name: Build
        run: |
          msbuild JoltPhysics\Build\VS2022_CL\JoltPhysics.sln /property:Configuration=Distribution -m
          # bash -c "cp JoltPhysics/Build/VS2022_CL/Distribution/Jolt.lib native/joltc_zig.lib"

      - uses: mlugg/setup-zig@v1
      - name: Prepare java
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '22'

      - name: Install clojure tools
        uses: DeLaGuardo/setup-clojure@12.5
        with:
          cli: latest

      - name: install tools
        run: |
          curl -o jextract.tar.gz https://download.java.net/java/early_access/jextract/22/5/openjdk-22-jextract+5-33_windows-x64_bin.tar.gz
          tar -xvzf jextract.tar.gz

      - name: install bake
        run: |
          git clone https://github.com/SanderMertens/bake
          cd bake\build-Windows
          nmake
          cd ..
          ./bake setup --local

      - name: compile and jextract native modules
        run: |
          bash -c "bin/ci_windows.sh"
          clojure -T:build compile-app

      - name: run test
        run: |
          clojure -M:dev -m vybe.native.loader && clojure -M:test

  build-linux:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      fail-fast: true

    steps:
      - uses: actions/checkout@v4
      - uses: mlugg/setup-zig@v1

      - name: Prepare java
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '22'

      - name: Install clojure tools
        uses: DeLaGuardo/setup-clojure@12.5
        with:
          cli: latest

      - name: install tools
        run: |
          wget -O jextract.tar.gz https://download.java.net/java/early_access/jextract/22/5/openjdk-22-jextract+5-33_linux-x64_bin.tar.gz
          tar -xvzf jextract.tar.gz

          sudo apt-get install -y --no-install-recommends libglfw3 libglfw3-dev libx11-dev libxcursor-dev libxrandr-dev libxinerama-dev libxi-dev libxext-dev libxfixes-dev libwayland-dev libxkbcommon-dev

      - name: install bake
        run: |
          git clone https://github.com/SanderMertens/bake
          make -C bake/build-$(uname)
          bake/bake setup

      - name: compile and jextract native modules
        run: |
          bin/ci.sh

      - name: run test
        run: |
          bin/kaocha

  build-macos:
    runs-on: macOS-latest
    timeout-minutes: 30
    strategy:
      fail-fast: true

    steps:
      - uses: actions/checkout@v4
      - uses: mlugg/setup-zig@v1

      - name: Prepare java
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '22'

      - name: Install clojure tools
        uses: DeLaGuardo/setup-clojure@12.5
        with:
          cli: latest

      - name: install tools
        run: |
          wget -O jextract.tar.gz https://download.java.net/java/early_access/jextract/22/5/openjdk-22-jextract+5-33_macos-aarch64_bin.tar.gz
          tar -xvzf jextract.tar.gz

      - name: install bake
        run: |
          git clone https://github.com/SanderMertens/bake
          make -C bake/build-$(uname)
          bake/bake setup

      - name: compile and jextract native modules
        run: |
          bin/ci.sh

      - name: run test
        run: |
          bin/kaocha
